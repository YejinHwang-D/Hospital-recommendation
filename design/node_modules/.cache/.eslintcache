[{"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js":"1","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js":"2","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js":"3","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js":"4","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js":"5","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js":"6","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js":"7","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js":"8","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js":"9"},{"size":288,"mtime":1642729693004,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1642729645327,"results":"12","hashOfConfig":"11"},{"size":707,"mtime":1643354418036,"results":"13","hashOfConfig":"11"},{"size":446,"mtime":1642729700104,"results":"14","hashOfConfig":"11"},{"size":1634,"mtime":1642735438517,"results":"15","hashOfConfig":"11"},{"size":286,"mtime":1642735443291,"results":"16","hashOfConfig":"11"},{"size":4161,"mtime":1643358848719,"results":"17","hashOfConfig":"11"},{"size":4811,"mtime":1643369211763,"results":"18","hashOfConfig":"11"},{"size":673,"mtime":1643367642737,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bzd870",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js",[],["41","42"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js",["43","44","45","46","47","48","49"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\n\nfunction NewTest() {\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n    const [symptom_level, setSymptom_level] = useState(1);\n    const [symptom, setSymptom] = useState('이+아픔');\n\n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'testapi?symptom_level=' + symptom_level + '&symptom=' + symptom,\n        })\n        .then(response => {\n            console.log(\"데이터 받아왔어요! : \" + response.data);\n            setJsondata(response.data);\n            console.log(\"데이터 길이: \" + response.data.length);\n\n        })\n    }, [symptom, symptom_level]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n        //console.log('출력: ' + e.target[0].value);\n        //console.log('출력2: ' + e.target[1].value);\n\n        const symptom_level = e.target[0].value;\n        const symptom = e.target[1].value;\n\n        if (symptom_level != 0 && symptom != '증상') {\n            setSymptom_level(e.target[0].value)\n            setSymptom(e.target[1].value)\n        }\n        else if (symptom_level != 0 && symptom == '증상') {\n            alert(\"증상을 선택해주세요.\");\n            //console.log(\"증상 선택 안됨\")\n        }\n        else if (symptom_level == 0 && symptom != '증상') {\n            alert(\"증상 정도를 선택해주세요.\");\n            //console.log(\"증상 정도 선택 안됨\")\n        }\n        else {\n            alert(\"증상 정도와 증상을 선택해주세요.\");\n            //console.log(\"둘 다 선택 안됨.\")\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n    \n\n    //const inputAddr = req.query.inputAddr;\n    //const inputType = req.query.inputType;\n    //const inputFilter = req.query.inputFilter;\n    //위와 같이 3개 값 넘겨줘야 함.\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n            <p className=\"SearchMainText\">증상을 입력해주세요</p>\n            <form onSubmit={AfterSubmit} >\n                    <div className=\"SearchSection\">\n                        <select name=\"symptom_level\" className=\"symptom_level\">\n                            <option value=\"0\">증상 정도</option>\n                            <option value=\"1\">매우 아픔</option>\n                            <option value=\"2\">조금 아픔</option>\n                            <option value=\"3\">보통</option>\n                            <option value=\"4\">약한 증상</option>\n                            <option value=\"5\">의심 증상</option>\n                        </select>\n                        <select name=\"symptom\" className=\"symptom\">\n                            <option>증상</option>\n                            <option>머리 아픔</option>\n                            <option>눈 이상</option>\n                            <option>뼈 부러짐</option>\n                            <option>코 막힘</option>\n                            <option>이 아픔</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            \n\n            <div className=\"cardDiv\">\n                {jsondata.map((data, index) => (\n                    <div className=\"card1\">\n                        <p key={index} className=\"Hname\">{data.name}</p>\n                        <p key={index} className=\"Haddr\">{data.addr}</p>\n                        <p key={index} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                    </div>\n                ))}\n                {\n                    datalength === 0\n                    ? <p className=\"noneResultText\">검색 결과가 없습니다.</p>\n                    : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js",["50","51","52","53","54","55","56","57"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport DaumPostcode from 'react-daum-postcode';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\nimport Post from './AddrPopup';\n\nfunction NewTest() {\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n    const [symptom_level, setSymptom_level] = useState(1);\n    const [symptom, setSymptom] = useState('이+아픔');\n\n    const [address, setAddress] = useState();\n    const [popup, setPopup] = useState(false);\n\n\n    \n    \n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'testapi?symptom_level=' + symptom_level + '&symptom=' + symptom,\n        })\n        .then(response => {\n            console.log(\"데이터 받아왔어요! : \" + response.data);\n            setJsondata(response.data);\n            console.log(\"데이터 길이: \" + response.data.length);\n\n        })\n    }, [symptom, symptom_level]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n        //console.log('출력: ' + e.target[0].value);\n        //console.log('출력2: ' + e.target[1].value);\n\n        const symptom_level = e.target[0].value;\n        const symptom = e.target[1].value;\n\n        if (symptom_level != 0 && symptom != '증상') {\n            setSymptom_level(e.target[0].value)\n            setSymptom(e.target[1].value)\n        }\n        else if (symptom_level != 0 && symptom == '증상') {\n            alert(\"증상을 선택해주세요.\");\n            //console.log(\"증상 선택 안됨\")\n        }\n        else if (symptom_level == 0 && symptom != '증상') {\n            alert(\"증상 정도를 선택해주세요.\");\n            //console.log(\"증상 정도 선택 안됨\")\n        }\n        else {\n            alert(\"증상 정도와 증상을 선택해주세요.\");\n            //console.log(\"둘 다 선택 안됨.\")\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n    //주소가 state에 잘 들어갔는지 확인\n    const CheckAddr = (e) => {\n        console.log(address);\n    }\n\n\n    \n\n\n\n\n    //const inputAddr = req.query.inputAddr;\n    //const inputType = req.query.inputType;\n    //const inputFilter = req.query.inputFilter;\n    //위와 같이 3개 값 넘겨줘야 함.\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n            \n\n            <input value={address}></input>\n            <button onClick={()=> {setPopup(!popup)}}>주소 검색</button>\n            {\n                popup && \n                <Post address={address} setAddress={setAddress}></Post>\n            }\n\n\n            <button onClick={CheckAddr}>잘 들어갔는지 확인</button>\n\n\n            <p className=\"SearchMainText\">증상을 입력해주세요</p>\n            <form onSubmit={AfterSubmit} >\n                    <div className=\"SearchSection\">\n                        <select name=\"symptom_level\" className=\"symptom_level\">\n                            <option value=\"0\">증상 정도</option>\n                            <option value=\"1\">매우 아픔</option>\n                            <option value=\"2\">조금 아픔</option>\n                            <option value=\"3\">보통</option>\n                            <option value=\"4\">약한 증상</option>\n                            <option value=\"5\">의심 증상</option>\n                        </select>\n                        <select name=\"symptom\" className=\"symptom\">\n                            <option>증상</option>\n                            <option>머리 아픔</option>\n                            <option>눈 이상</option>\n                            <option>뼈 부러짐</option>\n                            <option>코 막힘</option>\n                            <option>이 아픔</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            \n\n            <div className=\"cardDiv\">\n                {jsondata.map((data, index) => (\n                    <div className=\"card1\">\n                        <p key={index} className=\"Hname\">{data.name}</p>\n                        <p key={index} className=\"Haddr\">{data.addr}</p>\n                        <p key={index} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                    </div>\n                ))}\n                {\n                    datalength === 0\n                    ? <p className=\"noneResultText\">검색 결과가 없습니다.</p>\n                    : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js",["58","59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":24,"nodeType":"67","messageId":"68","endLine":8,"endColumn":33},{"ruleId":"69","severity":1,"message":"70","line":33,"column":27,"nodeType":"71","messageId":"72","endLine":33,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":33,"column":43,"nodeType":"71","messageId":"72","endLine":33,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":37,"column":32,"nodeType":"71","messageId":"72","endLine":37,"endColumn":34},{"ruleId":"69","severity":1,"message":"73","line":37,"column":48,"nodeType":"71","messageId":"72","endLine":37,"endColumn":50},{"ruleId":"69","severity":1,"message":"73","line":41,"column":32,"nodeType":"71","messageId":"72","endLine":41,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":41,"column":48,"nodeType":"71","messageId":"72","endLine":41,"endColumn":50},{"ruleId":"65","severity":1,"message":"74","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":10,"column":24,"nodeType":"67","messageId":"68","endLine":10,"endColumn":33},{"ruleId":"69","severity":1,"message":"70","line":41,"column":27,"nodeType":"71","messageId":"72","endLine":41,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":41,"column":43,"nodeType":"71","messageId":"72","endLine":41,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":45,"column":32,"nodeType":"71","messageId":"72","endLine":45,"endColumn":34},{"ruleId":"69","severity":1,"message":"73","line":45,"column":48,"nodeType":"71","messageId":"72","endLine":45,"endColumn":50},{"ruleId":"69","severity":1,"message":"73","line":49,"column":32,"nodeType":"71","messageId":"72","endLine":49,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":49,"column":48,"nodeType":"71","messageId":"72","endLine":49,"endColumn":50},{"ruleId":"65","severity":1,"message":"75","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"76","line":1,"column":28,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"77","line":5,"column":9,"nodeType":"67","messageId":"68","endLine":5,"endColumn":16},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'setLength' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'DaumPostcode' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'address' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]