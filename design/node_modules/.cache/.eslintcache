[{"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js":"1","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js":"2","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js":"3","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js":"4","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js":"5","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js":"6","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js":"7","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js":"8","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js":"9","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Modal.js":"10"},{"size":288,"mtime":1642729693004,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1642729645327,"results":"13","hashOfConfig":"12"},{"size":707,"mtime":1643876307244,"results":"14","hashOfConfig":"12"},{"size":446,"mtime":1642729700104,"results":"15","hashOfConfig":"12"},{"size":1634,"mtime":1642735438517,"results":"16","hashOfConfig":"12"},{"size":286,"mtime":1642735443291,"results":"17","hashOfConfig":"12"},{"size":4161,"mtime":1643358848719,"results":"18","hashOfConfig":"12"},{"size":5241,"mtime":1643942300051,"results":"19","hashOfConfig":"12"},{"size":667,"mtime":1643942010594,"results":"20","hashOfConfig":"12"},{"size":1065,"mtime":1643942910152,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1bzd870",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js",[],["48","49"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js",[],["50","51"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js",["52","53","54","55","56","57","58"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\n\nfunction NewTest() {\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n    const [symptom_level, setSymptom_level] = useState(1);\n    const [symptom, setSymptom] = useState('이+아픔');\n\n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'testapi?symptom_level=' + symptom_level + '&symptom=' + symptom,\n        })\n        .then(response => {\n            console.log(\"데이터 받아왔어요! : \" + response.data);\n            setJsondata(response.data);\n            console.log(\"데이터 길이: \" + response.data.length);\n\n        })\n    }, [symptom, symptom_level]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n        //console.log('출력: ' + e.target[0].value);\n        //console.log('출력2: ' + e.target[1].value);\n\n        const symptom_level = e.target[0].value;\n        const symptom = e.target[1].value;\n\n        if (symptom_level != 0 && symptom != '증상') {\n            setSymptom_level(e.target[0].value)\n            setSymptom(e.target[1].value)\n        }\n        else if (symptom_level != 0 && symptom == '증상') {\n            alert(\"증상을 선택해주세요.\");\n            //console.log(\"증상 선택 안됨\")\n        }\n        else if (symptom_level == 0 && symptom != '증상') {\n            alert(\"증상 정도를 선택해주세요.\");\n            //console.log(\"증상 정도 선택 안됨\")\n        }\n        else {\n            alert(\"증상 정도와 증상을 선택해주세요.\");\n            //console.log(\"둘 다 선택 안됨.\")\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n    \n\n    //const inputAddr = req.query.inputAddr;\n    //const inputType = req.query.inputType;\n    //const inputFilter = req.query.inputFilter;\n    //위와 같이 3개 값 넘겨줘야 함.\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n            <p className=\"SearchMainText\">증상을 입력해주세요</p>\n            <form onSubmit={AfterSubmit} >\n                    <div className=\"SearchSection\">\n                        <select name=\"symptom_level\" className=\"symptom_level\">\n                            <option value=\"0\">증상 정도</option>\n                            <option value=\"1\">매우 아픔</option>\n                            <option value=\"2\">조금 아픔</option>\n                            <option value=\"3\">보통</option>\n                            <option value=\"4\">약한 증상</option>\n                            <option value=\"5\">의심 증상</option>\n                        </select>\n                        <select name=\"symptom\" className=\"symptom\">\n                            <option>증상</option>\n                            <option>머리 아픔</option>\n                            <option>눈 이상</option>\n                            <option>뼈 부러짐</option>\n                            <option>코 막힘</option>\n                            <option>이 아픔</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            \n\n            <div className=\"cardDiv\">\n                {jsondata.map((data, index) => (\n                    <div className=\"card1\">\n                        <p key={index} className=\"Hname\">{data.name}</p>\n                        <p key={index} className=\"Haddr\">{data.addr}</p>\n                        <p key={index} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                    </div>\n                ))}\n                {\n                    datalength === 0\n                    ? <p className=\"noneResultText\">검색 결과가 없습니다.</p>\n                    : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\nimport Post from './AddrPopup';\nimport Modal from './Modal';\n\nfunction NewTest() {\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n    const [symptom_level, setSymptom_level] = useState(1);\n    const [symptom, setSymptom] = useState('이+아픔');\n\n    const [address, setAddress] = useState();\n    const [popup, setPopup] = useState(false);\n\n    const [inputAddr, setinputAddr] = useState('서울 송파구 백제고분로 2');\n    const [inputType, setinputType] = useState('외과');\n    const [inputFilter, setinputFilter] = useState('all');\n\n    const [modalOpen, setModalOpen] = useState(false);\n    const openModal = () => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    \n    \n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter,\n        })\n        .then(response => {\n            console.log(\"데이터 받아왔어요! : \" + response.data);\n            setJsondata(response.data);\n            console.log(\"데이터 길이: \" + response.data.length);\n            setLength(response.data.length)\n\n        })\n    }, [inputAddr, inputType, inputFilter]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n        console.log(e.target[0].value);\n        console.log(e.target[1].value); //이건 뭐지?\n        console.log(e.target[2].value);\n        console.log(e.target[3].value);\n\n\n        const addr = e.target[0].value;\n        const type = e.target[2].value;\n        const filter = e.target[3].value;\n\n        if (addr != '' && type != '증상') {\n            setinputAddr(addr)\n            setinputType(type)\n            setinputFilter(filter);\n        }\n        else if (addr != '' && type == '병원종류') {\n            alert(\"주소를 입력해주세요.\");\n        }\n        else if (addr == '' && type != '병원종류') {\n            alert(\"병원 종류를 선택해주세요.\");\n        }\n        else {\n            alert(\"주소, 병원 종류, 보기 종류를 선택해주세요.\");\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n    //주소가 state에 잘 들어갔는지 확인\n    const CheckAddr = (e) => {\n        console.log(address);\n    }\n\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n\n            \n\n\n\n\n\n\n            <p className=\"SearchMainText\">증상을 입력해주세요</p>\n            <form onSubmit={AfterSubmit} >\n                    <div className=\"SearchSection\">\n                        <input value={address} className=\"inputAddr\"></input>\n                        <button type=\"button\" className=\"AddrBtn\" onClick={openModal}>주소 검색</button>\n                        <Modal open={modalOpen} close={closeModal} header=\"주소 검색\" address={address} setAddress={setAddress} autoClose></Modal>\n                        <select name=\"inputType\" className=\"symptom_level\">\n                            <option value=\"병원종류\">병원종류</option>\n                            <option value=\"이비인후과\">이비인후과</option>\n                            <option value=\"내과\">내과</option>\n                            <option value=\"외과\">외과</option>\n                            <option value=\"정형외과\">정형외과</option>\n                            <option value=\"안과\">안과</option>\n                            <option value=\"치과\">치과</option>\n                            <option value=\"피부과\">피부과</option>\n                            <option value=\"한의원\">한의원</option>\n                            <option value=\"가정의학과\">가정의학과</option>\n                        </select>\n                        <select name=\"inputFilter\" className=\"symptom\">\n                            <option value=\"all\">전체보기</option>\n                            <option value=\"infant\">소아과 보기</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            \n            <p>검색 결과는 <strong>{datalength}</strong>건입니다.</p>\n            <div className=\"cardDiv\">\n                {jsondata.map((data, index) => (\n                    <div className=\"card1\">\n                        <p key={index} className=\"Hname\">{data.name}</p>\n                        <p key={index} className=\"Haddr\">{data.addr}</p>\n                        <p key={index} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                    </div>\n                ))}\n                {\n                    datalength === 0 ? <p className=\"noneResultText\">검색 결과가 없습니다</p> : <p className=\"noneResultText\">- END -</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js",["73","74","75"],"import React, { useEffect, useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\n\nconst Post = (props) => {\n  const address = props.address;\n  const setAddress = props.setAddress;\n\n  const onCompletePost = (data) => {\n    console.log(data.address);\n    setAddress(data.address);\n  };\n\n  const postCodeStyle = {\n   \n    display: \"block\",\n    position: \"absolute\",\n    top: \"20%\",\n    width: \"400px\",\n    height: \"400px\",\n    padding: \"7px\",\n    zIndex: 100, \n  };\n\n  return (\n    <>\n        <DaumPostcode\n          style={postCodeStyle}\n          autoClose\n          onComplete={onCompletePost}\n        />\n     \n    </>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Modal.js",["76","77","78"],"import React, { useEffect, useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const address = props.address;\n  const setAddress = props.setAddress;\n  const { open, close, header } = props;\n\n  const onCompletePost = (data) => {\n    console.log(data.address);\n    setAddress(data.address);\n  };\n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            <DaumPostcode\n            autoClose\n            onComplete={onCompletePost}\n            />\n            close를 눌러주세요.\n          </main>\n          <footer>\n            <button className=\"close\" onClick={close}>\n              {' '}\n              close{' '}\n            </button>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":24,"nodeType":"87","messageId":"88","endLine":8,"endColumn":33},{"ruleId":"89","severity":1,"message":"90","line":33,"column":27,"nodeType":"91","messageId":"92","endLine":33,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":33,"column":43,"nodeType":"91","messageId":"92","endLine":33,"endColumn":45},{"ruleId":"89","severity":1,"message":"90","line":37,"column":32,"nodeType":"91","messageId":"92","endLine":37,"endColumn":34},{"ruleId":"89","severity":1,"message":"93","line":37,"column":48,"nodeType":"91","messageId":"92","endLine":37,"endColumn":50},{"ruleId":"89","severity":1,"message":"93","line":41,"column":32,"nodeType":"91","messageId":"92","endLine":41,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":41,"column":48,"nodeType":"91","messageId":"92","endLine":41,"endColumn":50},{"ruleId":"85","severity":1,"message":"94","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":12},{"ruleId":"85","severity":1,"message":"95","line":11,"column":12,"nodeType":"87","messageId":"88","endLine":11,"endColumn":25},{"ruleId":"85","severity":1,"message":"96","line":11,"column":27,"nodeType":"87","messageId":"88","endLine":11,"endColumn":43},{"ruleId":"85","severity":1,"message":"97","line":12,"column":12,"nodeType":"87","messageId":"88","endLine":12,"endColumn":19},{"ruleId":"85","severity":1,"message":"98","line":12,"column":21,"nodeType":"87","messageId":"88","endLine":12,"endColumn":31},{"ruleId":"85","severity":1,"message":"99","line":15,"column":12,"nodeType":"87","messageId":"88","endLine":15,"endColumn":17},{"ruleId":"85","severity":1,"message":"100","line":15,"column":19,"nodeType":"87","messageId":"88","endLine":15,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":56,"column":18,"nodeType":"91","messageId":"92","endLine":56,"endColumn":20},{"ruleId":"89","severity":1,"message":"90","line":56,"column":32,"nodeType":"91","messageId":"92","endLine":56,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":61,"column":23,"nodeType":"91","messageId":"92","endLine":61,"endColumn":25},{"ruleId":"89","severity":1,"message":"93","line":61,"column":37,"nodeType":"91","messageId":"92","endLine":61,"endColumn":39},{"ruleId":"89","severity":1,"message":"93","line":64,"column":23,"nodeType":"91","messageId":"92","endLine":64,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":64,"column":37,"nodeType":"91","messageId":"92","endLine":64,"endColumn":39},{"ruleId":"85","severity":1,"message":"101","line":77,"column":11,"nodeType":"87","messageId":"88","endLine":77,"endColumn":20},{"ruleId":"85","severity":1,"message":"102","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"103","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"104","line":5,"column":9,"nodeType":"87","messageId":"88","endLine":5,"endColumn":16},{"ruleId":"85","severity":1,"message":"102","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"103","line":1,"column":28,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"104","line":6,"column":9,"nodeType":"87","messageId":"88","endLine":6,"endColumn":16},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"no-unused-vars","'setLength' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Post' is defined but never used.","'symptom_level' is assigned a value but never used.","'setSymptom_level' is assigned a value but never used.","'symptom' is assigned a value but never used.","'setSymptom' is assigned a value but never used.","'popup' is assigned a value but never used.","'setPopup' is assigned a value but never used.","'CheckAddr' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'address' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]