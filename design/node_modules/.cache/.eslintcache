[{"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js":"1","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js":"2","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js":"3","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js":"4","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js":"5","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js":"6","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrModal.js":"7","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalsModal.js":"8","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalDetail.js":"9","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Signin.js":"10","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Signup.js":"11","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/Footer.js":"12","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Intro.js":"13","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/SigninModal.js":"14","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Mypage.js":"15","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/SignupModal.js":"16","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/ReportsModal.js":"17","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/Consulting.js":"18","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/Question.js":"19","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/community.js":"20","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/QuestionWrite.js":"21","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/ConsultingWrite.js":"22","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/QuestionDetail.js":"23","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/ConsultingDetail.js":"24","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Search.js":"25","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/comments_privacy.js":"26","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Withdrawal.js":"27","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/reviews_data.js":"28","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/contents_none.js":"29","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/reports_data.js":"30","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/board_data.js":"31","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/comments_data.js":"32","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/Adminpage.js":"33","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/ChangePWD.js":"34","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/User_data_admin.js":"35","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/Reports_accept_admin.js":"36","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/Reports_data_admin.js":"37","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/User_data_admin_Detail.js":"38","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/reviews_data_admin.js":"39","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/reports_data_admin.js":"40","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/communities_data_admin.js":"41","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/comments_data_admin.js":"42"},{"size":288,"mtime":1642729693004,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1642729645327,"results":"45","hashOfConfig":"44"},{"size":2580,"mtime":1652273430248,"results":"46","hashOfConfig":"44"},{"size":3549,"mtime":1652536714996,"results":"47","hashOfConfig":"44"},{"size":2144,"mtime":1652537764307,"results":"48","hashOfConfig":"44"},{"size":286,"mtime":1642735443291,"results":"49","hashOfConfig":"44"},{"size":989,"mtime":1646196322500,"results":"50","hashOfConfig":"44"},{"size":4119,"mtime":1647064910645,"results":"51","hashOfConfig":"44"},{"size":3624,"mtime":1652192899705,"results":"52","hashOfConfig":"44"},{"size":2253,"mtime":1651296145106,"results":"53","hashOfConfig":"44"},{"size":1916,"mtime":1646278230232,"results":"54","hashOfConfig":"44"},{"size":672,"mtime":1645492945728,"results":"55","hashOfConfig":"44"},{"size":1925,"mtime":1651330980981,"results":"56","hashOfConfig":"44"},{"size":2030,"mtime":1651297575397,"results":"57","hashOfConfig":"44"},{"size":3523,"mtime":1652290902182,"results":"58","hashOfConfig":"44"},{"size":2126,"mtime":1646629913896,"results":"59","hashOfConfig":"44"},{"size":1945,"mtime":1646641173475,"results":"60","hashOfConfig":"44"},{"size":3364,"mtime":1652287262129,"results":"61","hashOfConfig":"44"},{"size":3293,"mtime":1652261069254,"results":"62","hashOfConfig":"44"},{"size":1524,"mtime":1652538410581,"results":"63","hashOfConfig":"44"},{"size":2392,"mtime":1652258829250,"results":"64","hashOfConfig":"44"},{"size":2373,"mtime":1652258831673,"results":"65","hashOfConfig":"44"},{"size":4292,"mtime":1652266237784,"results":"66","hashOfConfig":"44"},{"size":5102,"mtime":1652288250115,"results":"67","hashOfConfig":"44"},{"size":8267,"mtime":1651331210790,"results":"68","hashOfConfig":"44"},{"size":1750,"mtime":1652292036201,"results":"69","hashOfConfig":"44"},{"size":1973,"mtime":1652197621234,"results":"70","hashOfConfig":"44"},{"size":1489,"mtime":1652230859220,"results":"71","hashOfConfig":"44"},{"size":319,"mtime":1652230866305,"results":"72","hashOfConfig":"44"},{"size":1616,"mtime":1652544120465,"results":"73","hashOfConfig":"44"},{"size":1592,"mtime":1652290910406,"results":"74","hashOfConfig":"44"},{"size":1478,"mtime":1652265616935,"results":"75","hashOfConfig":"44"},{"size":2188,"mtime":1652283357087,"results":"76","hashOfConfig":"44"},{"size":2650,"mtime":1652292403061,"results":"77","hashOfConfig":"44"},{"size":1821,"mtime":1652276459574,"results":"78","hashOfConfig":"44"},{"size":2558,"mtime":1652293773974,"results":"79","hashOfConfig":"44"},{"size":1430,"mtime":1652276922056,"results":"80","hashOfConfig":"44"},{"size":4161,"mtime":1652276289466,"results":"81","hashOfConfig":"44"},{"size":1642,"mtime":1652276569861,"results":"82","hashOfConfig":"44"},{"size":1580,"mtime":1652276087139,"results":"83","hashOfConfig":"44"},{"size":1594,"mtime":1652276070526,"results":"84","hashOfConfig":"44"},{"size":1585,"mtime":1652276051098,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1bzd870",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js",[],["203","204"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js",["205"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport './comments.css';\nimport './HospitalDetail.css';\nimport './sign.css';\nimport './community.css';\nimport './img.css';\nimport './animation.css';\nimport './mypage.css';\nimport './search.css';\nimport MainPage from './pages/MainPage';\nimport Notfound from './pages/Notfound';\nimport Search from \"./pages/Search\";\nimport HospitalDetail from \"./pages/HospitalDetail\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport Intro from './pages/Intro';\nimport Mypage from './pages/Mypage';\nimport Admin from './pages/Admin/Adminpage';\nimport Community from './pages/Communities/community';\nimport Consulting from './pages/Communities/Consulting';\nimport Question from './pages/Communities/Question';\nimport QuestionWrite from './pages/Communities/QuestionWrite';\nimport ConsultingWrite from './pages/Communities/ConsultingWrite';\nimport QuestionDetail from './pages/Communities/QuestionDetail';\nimport ConsultingDetail from './pages/Communities/ConsultingDetail';\nimport User_data_admin_Detail from './pages/Admin/User_data_admin_Detail';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n        <Routes>\n          <Route path=\"/\" element={<MainPage />} />\n          <Route path=\"/search\" element={<Search />} />\n          <Route path=\"/detail\" element={<HospitalDetail />} />\n          <Route path=\"/:id\" element={<HospitalDetail />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/signin\" element={<Signin />} />\n          <Route path=\"/intro\" element={<Intro />} />\n          <Route path=\"/mypage\" element={<Mypage />} />\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/admin/:id\" element={<User_data_admin_Detail />} />\n\n          <Route path=\"/community\" element={<Community />} />\n          <Route path=\"/community/consulting\" element={<Consulting />} />\n          <Route path=\"/community/consulting-write\" element={<ConsultingWrite />} />\n          <Route path=\"/community/consulting/:id\" element={<ConsultingDetail />} />\n          <Route path=\"/community/question\" element={<Question />} />\n          <Route path=\"/community/question-write\" element={<QuestionWrite />} />\n          <Route path=\"/community/question/:id\" element={<QuestionDetail />} />\n          \n          <Route path=\"*\" element={<Notfound/>} />\n        </Routes>\n      </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;",["206","207"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js",["208","209","210","211","212"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport SigninModal from '../pages/SigninModal';\nimport SignupModal from '../pages/SignupModal';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const [iflogin, setIflogin] = useState(false);\n  const [ifAdminlogin, setIfAdminlogin] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n    const openModal = (e) => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n  const moveMypage = () => {\n    navigate('/mypage');\n  }\n\n  const moveAdminpage = () => {\n    navigate('/admin');\n  }\n\n  const [modalOpen2, setModalOpen2] = useState(false);\n    const openModal2 = (e) => {\n        setModalOpen2(true);\n    };\n    const closeModal2 = () => {\n        setModalOpen2(false);\n    };\n\n    useEffect(() => {\n      setIflogin(false)\n      setIfAdminlogin(false)\n      checkUser();\n    }, []);\n\n    const checkUser = async () => {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id != \"\" && response.data.admin_id_id == \"\") { //일반 사용자면\n          setIflogin(true)\n          setIfAdminlogin(false)\n        }\n        else if (response.data.admin_id_id != \"\" && response.data.user_id_id == \"\") { //관리자 권한이면\n          setIfAdminlogin(true)\n          setIflogin(false)\n        }\n        else {\n          console.log(\"로그인 상태가 아닙니다.\")\n          setIflogin(false)\n          setIfAdminlogin(false)\n        }\n      })\n      .catch(function (error) {\n      })\n    }\n\n    const logout = (e) => {\n      axios.post(\"/process/logout\", {\n      })\n      .then(function (response) {\n        alert(response.data.text + \"되었습니다.\");\n        setIflogin(false)\n      })\n      .catch(function (error) {\n        alert(\"실패\");\n      })\n    };\n\n      return (\n        <header>\n          <Link to=\"/\">\n          <h2 className=\"menuText\"><a className=\"mainPageLink\">나아라</a></h2>\n          </Link>\n          <nav>\n            <ul className=\"menu\">\n\n            {\n              iflogin === true ? \n              <li id=\"HeaderSignin\" onClick={e => logout(e)}>로그아웃</li>\n              :\n              (\n                ifAdminlogin === true ?\n                  <li id=\"HeaderSignin\" onClick={e => logout(e)}>로그아웃</li>\n                  : \n                  <>\n                  <li id=\"HeaderSignin\" onClick={e => openModal(e)}>로그인</li>\n                  <SigninModal open={modalOpen} close={closeModal} header=\"로그인\" setModalOpen={setModalOpen} setIflogin={setIflogin} autoClose></SigninModal>\n              </>\n              )\n              \n              }\n              <li>|</li>\n              {\n                iflogin === true ? \n                  <li id=\"HeaderSignup\" onClick={moveMypage}>MYPAGE</li>\n                : \n                ( \n                  ifAdminlogin === true ? \n                  <li id=\"HeaderSignup\" onClick={moveAdminpage}>ADMIN</li>\n                  : \n                  <>\n                  <li id=\"HeaderSignup\" onClick={e => openModal2(e)}>회원가입</li>\n                  <SignupModal open={modalOpen2} close={closeModal2} header=\"회원가입\" setModalOpen={setModalOpen2} autoClose></SignupModal>\n                  </>\n                )\n              }\n            </ul>\n          </nav>\n          \n        </header>\n      )\n}\n\nexport default Header;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js",["213","214","215","216"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrModal.js",["217","218","219"],"import React, { useEffect, useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const address = props.address;\n  const setAddress = props.setAddress;\n  const { open, close, header } = props;\n  const setModalOpen = props.setModalOpen;\n\n  const onCompletePost = (data) => {\n    console.log(data.address);\n    setAddress(data.address);\n    setModalOpen(false);\n  };\n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>&times;</button>\n          </header>\n          <main>\n            <DaumPostcode\n            autoClose\n            onComplete={onCompletePost}\n            />\n          </main>\n          <footer>\n            <button className=\"close\" onClick={close}>close</button>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalsModal.js",["220","221","222","223","224","225"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalDetail.js",["226","227","228","229","230"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigation } from \"react-router\";\nimport MenuBar from '../components/MenuBar'\nimport Footer from \"../components/Footer\";\n\nconst HospitalDetail = () => {\n  const [comments, setcomments] = useState();\n  const [commentsLength, setLength] = useState(0);\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  \n  const location = useLocation();\n  console.log(location.state)\n  const data = location.state.data;\n  const path = \"/reviews/\" + data._id;\n\n  useEffect(() => {\n    GetData();\n  }, []);\n\n  const GetData = async (e) => {\n    axios.get(path, {\n    })\n    .then(function (response) {\n      setUserId(response.data.user_id);\n      if (response.data.admin_id) {\n        setAdminId(response.data.admin_id);\n      }\n      else {\n        setAdminId(null);\n      }\n      setcomments(response.data.comments);\n      setLength(response.data.comments.length);\n      console.log(response.data.comments)\n    })\n    .catch(function (error) {\n    })\n  }\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    console.log(\"0번: \" + e.target[0].value); //내용\n    console.log(\"2번: \" + e.target[2].value); //병원\n    axios.get('/checkUser', {\n    })\n    .then(function (response) {\n      if( response.data.user_id_id !== null) {\n        setUserId(response.data.user_id_id)\n      }\n    })\n    .catch(function (error) {\n    })\n    const description = e.target[0].value;\n    const writer_id = e.target[1].value;\n    const hospital_id = e.target[2].value;\n    \n    if (e.target[0].value != '') {\n      axios.post(\"/reviews/write\", {\n        writer_id: writer_id,\n        hospital_id: hospital_id,\n        description: description,\n      })\n      .then(function (response) {\n        alert(response.data.text);\n        console.log(response.data.comments)\n        GetData();\n      })\n      .catch(function (error) {\n        alert(\"실패\");\n      })\n  }\n  else {\n      alert(\"내용을 입력해주세요.\");\n  }\n}\n\n    return (\n        <div className=\"App\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">{data.name}</span>\n          </div>\n          \n          <form onSubmit={AfterSubmit} className=\"commentsForm\">\n            <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"5\" placeholder=\"한 번 작성한 리뷰는 삭제 및 수정이 불가합니다. (5글자 이상부터 등록 가능)\"></textarea>\n            <input type=\"hidden\" name=\"writer_id\" value={user_id}></input>\n            <input type=\"hidden\" name=\"hospital_id\" value={data._id}></input>\n            <div className=\"SubmitBtnDiv\">\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n            </div>\n          </form>\n        \n          \n          {\n              commentsLength === 0 ? \n                <p className=\"commentsNoneText\">등록된 리뷰가 없습니다.</p>\n              :\n              comments.map((data, id) => (\n                  <div className={id % 2 == 0 ? 'commentsDiv'+ 0 : 'commentsDiv'+ 1}>\n                      <p key={id} className=\"writer_id\">{data.writer_id[0].user_id}</p>\n                      <p key={id} className=\"description\">{data.description}</p>\n                      {admin_id !== null ?\n                        <button>삭제</button>\n                      :\n                        null\n                      }\n                  </div>\n              ))\n          }\n\n          <Footer></Footer>\n        </div>\n    );\n}\n\nexport default HospitalDetail;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Signin.js",["231","232","233","234","235"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useParams, useLocation, useNavigation, useNavigate } from \"react-router\";\nimport MenuBar from '../components/MenuBar';\nimport Footer from \"../components/Footer\";\n\nimport AddrModal from \"../pages/AddrModal\";\nimport SigninModal from \"../pages/SigninModal\";\n\n\nconst HospitalDetail = () => {\n  const [address, setAddress] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  const openModal = () => {\n      setModalOpen(true);\n  };\n  const closeModal = () => {\n      setModalOpen(false);\n  };\n  const navigate = useNavigate();\n  \n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    console.log(\"0번: \" + e.target[0].value); //아이디\n    console.log(\"1번: \" + e.target[1].value); //비밀번호\n  \n    const inputId = e.target[0].value;\n    const inputPassword = e.target[1].value;\n    \n    if (e.target[0].value != '') {\n      axios.post(\"/process/login\", {\n        inputId: inputId,\n        inputPassword: inputPassword,\n      })\n      .then(function (response) {\n        alert(response.data.text);\n        navigate('/');\n      })\n      .catch(function (error) {\n        alert(\"실패\");\n      })\n    }\n    else {\n      alert(\"입력해주세요.\");\n    }\n}\n\n    return (\n        <div className=\"App\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">로그인</span>\n          </div>\n          \n          <form onSubmit={AfterSubmit} className=\"commentsForm\">\n            <input type=\"text\" required name=\"inputId\" id=\"inputId\" placeholder=\"ID\" minlength=\"5\" maxlength=\"20\"></input>\n            <input type=\"password\" required name=\"inputPassword\" id=\"inputPassword\" placeholder=\"Password\" minlength=\"7\"></input>\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n          </form>\n\n          <button type=\"button\" className=\"AddrBtn\" onClick={openModal}>비밀번호를 잊으셨나요?</button>\n          <SigninModal open={modalOpen} close={closeModal} header=\"로그인\" address={address} setAddress={setAddress} setModalOpen={setModalOpen} autoClose></SigninModal>\n\n\n          <Footer></Footer>\n        </div>\n    );\n}\n\nexport default HospitalDetail;",["236","237"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Signup.js",["238","239"],"import axios from \"axios\";\n//import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MenuBar from '../components/MenuBar'\nimport Footer from \"../components/Footer\";\n\nconst Signup= () => {\n  const navigate = useNavigate();\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    const createId = e.target[0].value;\n    const createPassword = e.target[1].value;\n    console.log(createId)\n    console.log(createPassword)\n    \n    if (e.target[0].value !== '') {\n      axios.post(\"/process/signup\", {\n        createId: createId,\n        createPassword: createPassword,\n      })\n      .then(function (response) {\n        if (response.data.text == \"exist\") {\n          alert(\"이미 존재하는 아이디입니다.\");\n        }\n        else if (response.data.text == \"success\") {\n          alert(\"회원가입에 성공했습니다. \\n로그인 화면으로 이동합니다.\");\n          navigate('/signin');\n        }\n        else {\n          alert(\"회원가입에 문제가 발생했습니다. 관리자에게 문의하세요.\");\n        }\n      })\n      .catch(function (error) {\n        alert(\"요청 실패\");\n      })\n  }\n  else {\n      alert(\"입력해주세요.\");\n  }\n}\n\n    return (\n        <div className=\"App\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">회원가입</span>\n          </div>\n          \n          <form onSubmit={AfterSubmit} className=\"commentsForm\">\n            <input type=\"text\" required name=\"createId\" id=\"createId\" placeholder=\"ID\" minLength=\"5\" maxLength=\"20\"></input>\n            <input type=\"password\" required name=\"createPassword\" id=\"createPassword\" placeholder=\"Password\" minLength=\"7\"></input>\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n          </form>\n          <Footer></Footer>\n        </div>\n    );\n}\n\nexport default Signup;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/Footer.js",["240"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component {\n    render() {\n      return (\n        <div className=\"footer\">\n          <nav>\n            <ul>\n            <span className=\"footerText\">\"본 저작물은 '건강보험심사평가원'에서 '16년'작성하여 공공누리 제1유형으로 개방한 '병원정보서비스(작성자:유보라)'을 이용하였으며,\n해당 저작물은 '공공데이터포털,https://www.data.go.kr/index.do'에서 무료로 다운받으실 수 있습니다.\"\n            </span>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n}\n\nexport default Footer;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Intro.js",[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/SigninModal.js",["241","242","243","244","245","246"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const address = props.address;\n  const setAddress = props.setAddress;\n  const { open, close, header } = props;\n  const setModalOpen = props.setModalOpen;\n  const setIflogin = props.setIflogin;\n  const navigate = useNavigate();\n\n  const onCompletePost = (data) => {\n    console.log(data.address);\n    setAddress(data.address);\n    setModalOpen(false);\n  };\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    console.log(\"0번: \" + e.target[0].value); //아이디\n    console.log(\"1번: \" + e.target[1].value); //비밀번호\n  \n    const inputId = e.target[0].value;\n    const inputPassword = e.target[1].value;\n    \n    if (e.target[0].value != '') {\n      axios.post(\"/process/login\", {\n        inputId: inputId,\n        inputPassword: inputPassword,\n      })\n      .then(function (response) {\n        alert(response.data.text);\n        setIflogin(true)\n        setModalOpen(false);\n      })\n      .catch(function (error) {\n        alert(\"?실패\");\n        console.log(error)\n      })\n  }\n  else {\n      alert(\"입력해주세요.\");\n  }\n}\n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>&times;</button>\n          </header>\n          <main>\n          <form className=\"commentsForm\" onSubmit={AfterSubmit}>\n            <input type=\"text\" required name=\"inputId\" class=\"form-control\" id=\"inputId\" placeholder=\"ID\" minlength=\"5\" maxlength=\"20\"></input>\n            <input type=\"password\" required name=\"inputPassword\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" minlength=\"7\"></input>\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n          </form>\n          </main>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Mypage.js",["247","248","249","250","251","252"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport MenuBar from '../components/MenuBar'\nimport Footer from \"../components/Footer\";\nimport Reports_data from \"../components/mypageComponents/reports_data\";\nimport Reviews_data from \"../components/mypageComponents/reviews_data\";\nimport Boards_data from \"../components/mypageComponents/board_data\";\nimport Comments_data from \"../components/mypageComponents/comments_data\";\nimport Comments_privacy from \"../components/mypageComponents/comments_privacy\";\nimport Withdrawal from \"./Withdrawal\";\n\nconst Mypage = () => {\n  const [boolReports, setBoolReports] = useState(false);\n  const [boolReviews, setBoolReviews] = useState(false);\n  const [boolBoards, setBoolBoards] = useState(false);\n  const [boolComments, setBoolComments] = useState(false);\n\n  //modal\n  const [modalOpen, setModalOpen] = useState(false);\n    const openModal = (e) => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };//\n\n  useEffect(() => {\n  }, []);\n\n  const ReportsArea = async (e) => {\n    setBoolReports(!(boolReports))\n    setBoolReviews(false)\n    setBoolBoards(false)\n    setBoolComments(false)\n  }\n  const ReviewArea = async (e) => {\n    setBoolReports(false)\n    setBoolReviews(!(boolReviews))\n    setBoolBoards(false)\n    setBoolComments(false)\n  }\n  const BoardsArea = async (e) => {\n    setBoolReports(false)\n    setBoolReviews(false)\n    setBoolBoards(!(boolBoards))\n    setBoolComments(false)\n  }\n  const CommentsArea = async (e) => {\n    setBoolReports(false)\n    setBoolReviews(false)\n    setBoolBoards(false)\n    setBoolComments(!(boolComments))\n  }\n \n\n    return (\n        <div className=\"MypageBackground\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">마이페이지</span>\n          </div>\n\n          <div className=\"mypage_Area\">\n            <button className={boolReports ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => ReportsArea(e)}>신고 병원</button>\n            <button className={boolReviews ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => ReviewArea(e)}>작성 리뷰</button>\n            <button className={boolBoards ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => BoardsArea(e)}>작성 게시글</button>\n            <button className={boolComments ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => CommentsArea(e)}>작성 댓글</button>\n          </div>\n\n          {\n            boolReports ?\n            <Reports_data></Reports_data>\n            : \n            null\n          }\n          {\n            boolReviews ?\n            <Reviews_data></Reviews_data>\n            : \n            null\n          }\n          {\n            boolBoards ?\n            <Boards_data></Boards_data>\n            : \n            null\n          }\n          {\n            boolComments ?\n            <Comments_data></Comments_data>\n            : \n            null\n          }\n          {\n            boolReviews || boolReports || boolComments || boolBoards ?\n              null\n            : \n            <Comments_privacy></Comments_privacy>\n          }\n\n          <div>\n            <button className=\"withdrawalBtn\" onClick={e => openModal(e)}>회원 탈퇴</button>\n            <Withdrawal open={modalOpen} close={closeModal} header=\"회원탈퇴\" setModalOpen={setModalOpen} autoClose></Withdrawal>\n          </div>\n\n          <Footer></Footer>\n        </div>\n    );\n}\n\nexport default Mypage;//","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/SignupModal.js",["253","254","255","256","257","258"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/ReportsModal.js",["259","260","261"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const { open, close, header, data, data2 } = props;\n  const setModalOpen = props.setModalOpen;\n  const navigate = useNavigate();\n\n\nconst ReportsSubmit = (e) => {\n  axios.get('/checkUser', {\n  })\n  .then(function (response) {\n    if( response.data.user_id_id !== null) {\n      const input_user_id = data2;\n      const input_hospital_id = data;\n      console.log(\"아이디: \" + input_user_id)\n      console.log(\"병원: \" + input_hospital_id)\n\n      axios.post(\"/process/report\", {\n        writer_id: input_user_id,\n        hospital_id: input_hospital_id,\n      })\n      .then(function (res) {\n        alert(res.data.text);\n        setModalOpen(false);\n      })\n      .catch(function (error) {\n        alert(\"신고 실패\");\n      })\n    }\n    else {\n      alert(\"로그인 후 다시 진행해주세요.\");\n    }\n  })\n  .catch(function (error) {\n  })\n}\n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>&times;</button>\n          </header>\n          <main>\n            <p>현재 해당 병원에 문제가 발생하여 <strong>신고</strong>합니다.</p>\n            <p>무분별한 신고는 제재 사유가 될 수 있으며, 신고 횟수 적용은 관리자의 승인 후 결정됩니다.</p>\n            <p>아래 <strong>[동의 및 신고]</strong>를 클릭하시면 위 내용을 인지하고 <strong>동의</strong>하신 것으로 간주됩니다.</p>\n            <button className=\"close\" onClick={close}>취소</button>\n            <button className=\"ReportsBtn\" onClick={ReportsSubmit}>동의 및 신고</button>\n          </main>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/Consulting.js",["262","263","264","265","266","267","268","269","270","271","272"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from 'react-router-dom'\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\n\nconst Question = () => {\n  const [getdata, setData] = useState();\n  const [getdataLength, setDataLength] = useState();\n  const [getdataBool, setBool] = useState(false);\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [postings, setPostings] = useState();\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const navigate = useNavigate();\n  let no = 1;\n  \n  useEffect(() => {\n    setData()\n    setDataLength(0)\n    setBool(false)\n    GetData();\n  }, [page]);\n\n  const GetData = async (e) => {\n    axios.get(\"/community/clinics\", {params: {page: page}})\n    .then(function (response) {\n      setBool(true)\n      setData(response.data.postings);\n      setTotalPages(response.data.totalPages)\n      setDataLength(response.data.postings.length);\n    })\n    .catch(function (error) {\n    })\n  }\n\n    const openDetail = (value, e) => {\n      console.log(\"value: \" + value)\n      navigate('/community/consulting/'+value, { state: {id: value}});\n    }\n\n    const writeCheck = (e) => {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id !== null) {\n          navigate('/community/consulting-write');\n        }\n        else {\n          alert(\"회원만 작성할 수 있습니다.\")\n        }\n      })\n    }\n\n    const downPage = (e) => {\n      if (page >=2) {\n        setPage(page-1)\n        GetData()\n      }\n      else {\n        alert(\"첫번째 페이지입니다.\")\n      }\n    }\n    \n    const upPage = (e) => {\n      if (page < totalPages) {\n        setPage(page+1)\n        GetData()\n      }\n      else {\n        alert(\"마지막 페이지입니다.\")\n      }\n    }\n      \n  \n\n    return (\n        <>\n        <div className=\"App\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">상담게시판</span>\n            <span className=\"MainTopSpan2\">일반 사용자들이 전문가에게 증상에 대해 상담받을 수 있는 곳</span>\n          </div>\n        </div>\n\n        <div className=\"OutDiv\">\n        {\n          getdataLength === 0 ? null :\n          getdataBool && getdata.map((data, index) => (\n            <div className={index % 2 == 0 ? 'BoardDiv'+ 1 : 'BoardDiv'+ 0}>\n              <span key={index} className=\"QesDetail_No\">{((page-1)*5)+(index+1)}</span>\n              <span key={index} className=\"QuesDetail_Title\" onClick={e => openDetail(data._id, e)}>{data.title}</span>\n              <span key={index} className=\"QuesDetail_Date\">{data.created_at}</span>\n            </div>\n          ))\n        }\n        </div>\n          <div className=\"BtnDiv\">\n            <button className=\"pageBtn\" onClick={e => downPage(e)}>이전</button>\n            <button className=\"pageBtn\" onClick={e => upPage(e)}>다음</button>\n            <button className=\"WriteBtn\" onClick={e => writeCheck(e)}><img className=\"WriteBtnImg_color\" src=\"/svg/fi-rr-edit.svg\"></img></button>\n          </div>\n            \n        \n\n        <Footer></Footer>\n        </>\n    );\n}\n\nexport default Question;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/Question.js",["273","274","275","276","277","278","279","280","281","282","283"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from 'react-router-dom'\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\n\nconst Question = () => {\n  const [getdata, setData] = useState();\n  const [getdataLength, setDataLength] = useState();\n  const [getdataBool, setBool] = useState(false);\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [postings, setPostings] = useState();\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const navigate = useNavigate();\n  let no = 1;\n  \n  useEffect(() => {\n    setData()\n    setDataLength(0)\n    setBool(false)\n    GetData();\n  }, [page]);\n\n  const GetData = async (e) => {\n    axios.get(\"/community/questions\", {params: {page: page}})\n    .then(function (response) {\n      setBool(true)\n      setData(response.data.postings);\n      setTotalPages(response.data.totalPages)\n      setDataLength(response.data.postings.length);\n    })\n    .catch(function (error) {\n\n    })\n  }\n\n    const openDetail = (value, e) => {\n      console.log(\"value: \" + value)\n      navigate('/community/question/'+value, { state: {id: value}});\n    }\n\n    const writeCheck = (e) => {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id !== null) {\n          navigate('/community/question-write');\n        }\n        else {\n          alert(\"회원만 작성할 수 있습니다.\")\n        }\n      })\n    }\n\n    const downPage = (e) => {\n      if (page >=2) {\n        setPage(page-1)\n        GetData()\n      }\n      else {\n        alert(\"첫번째 페이지입니다.\")\n      }\n    }\n    \n    const upPage = (e) => {\n      if (page < totalPages) {\n        setPage(page+1)\n        GetData()\n      }\n      else {\n        alert(\"마지막 페이지입니다.\")\n      }\n    }\n\n    return (\n        <>\n        <div className=\"App\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">질문게시판</span>\n            <span className=\"MainTopSpan2\">모든 사용자들이 증상에 대해 자유롭게 토론하고 의견을 나눌 수 있는 곳</span>\n          </div>\n        </div>\n\n        <div className=\"OutDiv\">\n        {\n          getdataLength === 0 ? null :\n          getdataBool && getdata.map((data, index) => (\n            <div className={index % 2 == 0 ? 'BoardDiv'+ 1 : 'BoardDiv'+ 0}>\n              <span key={index} className=\"QesDetail_No\">{((page-1)*5)+(index+1)}</span>\n              <span key={index} className=\"QuesDetail_Title\" onClick={e => openDetail(data._id, e)}>{data.title}</span>\n              <span key={index} className=\"QuesDetail_Date\">{data.created_at}</span>\n            </div>\n          ))\n        }\n          <button className=\"pageBtn\" onClick={e => downPage(e)}>이전</button>\n          <button className=\"pageBtn\" onClick={e => upPage(e)}>다음</button>\n          <button className=\"WriteBtn\" onClick={e => writeCheck(e)}><img className=\"WriteBtnImg_color\" src=\"/svg/fi-rr-edit.svg\"></img>작성</button>\n        </div>\n\n        <Footer></Footer>\n        </>\n    );\n}\n\nexport default Question;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/community.js",["284","285"],"import React from \"react\";\nimport { Link } from 'react-router-dom'\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\n\nfunction Community({ location, history }) {\n    return (\n        <>\n        <div className=\"CommuBackground\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n          <svg className=\"MainHeaderImg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#809fff\" fill-opacity=\"1\" d=\"M0,128L80,144C160,160,320,192,480,170.7C640,149,800,75,960,53.3C1120,32,1280,64,1360,80L1440,96L1440,0L1360,0C1280,0,1120,0,960,0C800,0,640,0,480,0C320,0,160,0,80,0L0,0Z\"></path></svg>\n            <span className=\"MainTopSpan\">이곳은 <strong>나아라</strong>의 커뮤니티입니다!</span>\n            <span className=\"MainTopSpanSub\">원하는 유형의 커뮤니티를 선택해주세요.</span>\n          </div>\n          \n          <div className=\"CommuBtnDiv\" id=\"1\">\n          <Link to=\"/community/consulting\">\n            <button className=\"QMoveBtn\" href=\"/community/consulting\"><img className=\"MainBtnImg_color\" src=\"/svg/fi-rr-graduation-cap.svg\"></img>상담게시판</button>\n          </Link>\n          <Link to=\"/community/question\">\n            <button className=\"CMoveBtn\" href=\"/community/question\"><img className=\"MainBtnImg_color\" src=\"/svg/fi-rr-info.svg\"></img>질문게시판</button>\n          </Link>\n        </div>\n        \n        <Footer></Footer>\n        </div>\n        </>\n    );\n}\n\nexport default Community;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/QuestionWrite.js",["286","287","288"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport MenuBar from '../../components/MenuBar';\nimport Footer from \"../../components/Footer\";\n\nconst Post = (props) => {\n  const navigate = useNavigate();\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    const inputTitle = e.target[0].value;\n    const inputDescription = e.target[1].value;\n\n    if (e.target[0].value != '') {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id !== \"\") {\n          axios.post(\"/community/questions-post\", {\n            writer: response.data.user_id_id,\n            inputTitle: inputTitle,\n            inputDescription: inputDescription,\n          })\n          .then(function (response) {\n            alert(\"게시글이 성공적으로 등록되었습니다. \\n목록으로 이동합니다.\");\n            navigate('/community/question')\n          })\n          .catch(function (error) {\n            alert(\"게시글 등록 실패\");\n          })\n        }\n      })\n      .catch(function (error) {\n      })\n    }\n    else {\n      alert(\"제목과 내용을 모두 입력해주세요.\");\n    }\n  }\n\n  const BacktoPage = (e) => {\n    if (window.confirm(\"정말 취소하시겠습니까? \\n계속을 누르시면 목록으로 돌아갑니다.\")) {\n      alert(\"글 작성이 취소되었습니다.\");\n      navigate('/community/question');\n    }\n    \n  }\n\n  return (\n    <div className=\"WriteSection\">\n        <MenuBar></MenuBar>\n        <div className=\"MainTopDiv\">\n          <span className=\"MainTopSpan\">질문게시판 게시글 작성</span>\n        </div>\n        <section>\n          <main>\n          <form className=\"QuestionWriteForm\" onSubmit={AfterSubmit}>\n            <input type=\"text\" required name=\"title\" className=\"WriteInputTitle\" id=\"inputTitle\" placeholder=\"input yout title\"></input>\n            <textarea required name=\"description\" className=\"WriteInputDesc\" id=\"inputDescription\" placeholder=\"input your Description\"></textarea>\n            <div>\n            <button id=\"WriteSubmit\" type=\"submit\">완료</button>\n            <button id=\"WriteCancel\" onClick={BacktoPage}>취소</button>\n            </div>\n          </form>\n          </main>\n        </section>\n        <Footer></Footer>\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/ConsultingWrite.js",["289","290","291"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport MenuBar from '../../components/MenuBar';\nimport Footer from \"../../components/Footer\";\n\nconst Post = (props) => {\n  const navigate = useNavigate();\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    const inputTitle = e.target[0].value;\n    const inputDescription = e.target[1].value;\n    \n    if (e.target[0].value != '') {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id !== \"\") {\n          axios.post(\"/community/clinics-post\", {\n            writer: response.data.user_id_id,\n            inputTitle: inputTitle,\n            inputDescription: inputDescription,\n          })\n          .then(function (response) {\n            alert(\"게시글이 성공적으로 등록되었습니다. \\n목록으로 이동합니다.\");\n            navigate('/community/consulting')\n          })\n          .catch(function (error) {\n            alert(\"게시글 등록 실패\");\n          })\n        }\n      })\n      .catch(function (error) {\n      })\n    }\n    else {\n      alert(\"제목과 내용을 모두 입력해주세요.\");\n    }\n  }\n\n  const BacktoPage = (e) => {\n    if (window.confirm(\"정말 취소하시겠습니까? \\n계속을 누르시면 목록으로 돌아갑니다.\")) {\n      alert(\"글 작성이 취소되었습니다.\");\n      navigate('/community/consulting');\n    }\n    \n  }\n\n  return (\n    <div>\n        <MenuBar></MenuBar>\n        <div className=\"MainTopDiv\">\n          <span className=\"MainTopSpan\">상담게시판 게시글 작성</span>\n        </div>\n        <section>\n          <main>\n          <form className=\"QuestionWriteForm\" onSubmit={AfterSubmit}>\n            <input type=\"text\" required name=\"title\" className=\"WriteInputTitle\" id=\"inputTitle\" placeholder=\"input yout title\"></input>\n            <textarea required name=\"description\" className=\"WriteInputDesc\" id=\"inputDescription\" placeholder=\"input your Description\"></textarea>\n            <div>\n            <button id=\"WriteSubmit\" type=\"submit\">완료</button>\n            <button id=\"WriteCancel\" onClick={BacktoPage}>취소</button>\n            </div>\n          </form>\n          </main>\n        </section>\n        <Footer></Footer>\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/QuestionDetail.js",["292","293","294","295","296","297","298","299","300"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/ConsultingDetail.js",["301","302","303","304","305","306","307","308","309"],"import axios from \"axios\";\nimport React, { useState, useEffect} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\n\nconst Clinics = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  //console.log(\"state: \", location.state.id);\n  const [data_id, setDataId] = useState(location.state.id);\n  const [data, setData] = useState({title: \"상담게시판 제목\", description: \"내용입니다.\", created_at: \"2022-04-27T07:51:51.702Z\"});\n  const [dataBool, setBool] = useState(false);\n  const [text, setText] = useState('');\n\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [comments, setcomments] = useState();\n  const [commentsLength, setLength] = useState(0);\n  const path = \"/community/clinics/comment-post\";\n  const data_path = \"/community/clinics/\" + data_id;\n  \n  useEffect(() => {\n    setDataId(location.state.id);\n    setBool(false)\n    CheckUser();\n    GetData();\n  }, []);\n\n  const GetData = async (e) => {\n    console.log(\"data_id: \" +data_id)\n    axios.get(data_path, {\n    })\n    .then(function (response) {\n      setcomments(response.data.comments)\n      setLength(response.data.comments.length)\n      setData(response.data.posting)\n      setBool(true)\n    })\n    .catch(function (error) {\n      console.log(\"error\")\n    })\n  }\n\n  const CheckUser = async (e) => {\n    axios.get('/checkUser', {\n    })\n    .then(function (response) {\n      if( response.data.user_id_id !== null) {\n        setUserId(response.data.user_id_id);\n      }\n    })\n  }\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    const description = e.target[0].value;\n    const posting_id = location.state.id;\n\n    if (e.target[0].value != '') {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id != \"\") {\n          axios.post(path, {\n            writer: response.data.user_id_id,\n            posting_id: posting_id,\n            description: description,\n          })\n          .then(function (response) {\n            alert(response.data.text);\n            setText('')\n            GetData();\n          })\n          .catch(function (error) {\n            alert(\"댓글 작성 실패\");\n          })\n        }\n        else {\n          alert(\"회원만 작성 가능합니다.\")\n        }\n      })\n      .catch(function (error) {\n      })\n    }\n    else {\n      alert(\"내용을 입력해주세요.\");\n    }\n}\n\n  const BacktoPage = () => {\n    navigate('/community/consulting');\n  }\n  \n  const onChange = (e) => {\n    setText(e.target.value)\n  }\n\n  const DeleteComments = (value, e) => {\n    if ( window.confirm(\"댓글을 삭제하시겠습니까?\")) {\n      axios.delete(\"/community/delete/\" + value, {\n      })\n      .then(function (response) {\n        if (response.data.text == \"성공\") {\n          alert(\"댓글이 삭제되었습니다.\")\n          GetData();\n        }\n        else {\n          alert(response.data.text)\n        }\n      })\n      .catch(function (error) {\n        alert(\"댓글 삭제 실패\");\n        console.log(error)\n      })\n  }\n  else {\n      alert(\"취소했습니다.\");\n  }\n  }\n\n    return (\n        <>\n          <MenuBar></MenuBar>\n          <div className=\"MypageBackground\">\n          <div className=\"cardDiv\">\n            {\n                <div className=\"DetailDiv\">\n                    <p className=\"DetailTitle\">{data.title}</p>\n                    <p className=\"DetailDate\">{data.created_at}</p>\n                    <p className=\"DetailDesc\">{data.description}</p>\n                </div>\n            }\n            <button className=\"BackBtn\" onClick={BacktoPage}>이전</button>\n          </div>\n          \n          <div className=\"cardDiv\">\n          <form onSubmit={AfterSubmit} className=\"commentsForm\">\n            <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"5\" placeholder=\"댓글 작성\" onChange={onChange} value={text}></textarea>\n            <div className=\"SubmitBtnDiv\">\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n            </div>\n          </form>\n\n          <div className=\"OutDiv\">\n          {\n              commentsLength === 0 ? \n                <p className=\"commentsNoneText\">등록된 댓글이 없습니다.</p>\n              :\n              comments.map((data, id) => (\n                  <div className={id % 2 == 0 ? 'commentsDiv'+ 0 : 'commentsDiv'+ 1}>\n                      <p key={id} className=\"description\">{data.description}</p>\n                      <p key={id} className=\"description\">{data.created_at}</p>\n                      { user_id == data.writer ?\n                        <button className=\"DelBtn\" onClick={e => DeleteComments(data._id, e)}>삭제</button>\n                      :\n                        null\n                      }\n                  </div>\n              ))\n          }\n          </div>\n          </div>\n          \n          <Footer></Footer>\n          </div>\n        </>\n    );\n}\n\nexport default Clinics;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Search.js",["310","311","312","313","314","315","316","317","318","319"],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport MenuBar from \"../components/MenuBar\";\nimport AddrModal from './AddrModal';\nimport HospitalsModal from './HospitalsModal';\nimport Footer from \"../components/Footer\";\n\nfunction NewTest() {\n    //요청 데이터 관련\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n\n    //요청 폼 관련\n    const [inputAddr, setinputAddr] = useState('');\n    const [inputType, setinputType] = useState('');\n    const [inputFilter, setinputFilter] = useState('');\n    \n    //조건부 텍스트 렌더링\n    const [listText, setlistText] = useState('아직 검색하지 않았어요!');\n\n    //주소 모달 관련\n    const [address, setAddress] = useState();\n    const [modalOpen, setModalOpen] = useState(false);\n    const openModal = () => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    \n    //상세정보 모달 관련\n    const [DmodalOpen, setDModalOpen] = useState(false);\n    const [modalData, setmodalData] = useState();\n    const openDModal = (value, e) => {\n        //모달 열기\n        setDModalOpen(true);\n        //value는 JSON 데이터이므로 value.name 식으로 접근\n        setmodalData(value);\n    };\n    const closeDModal = () => {\n        setDModalOpen(false);\n    };\n\n    const [boolAddr, setBoolAddr] = useState(true);\n    const [boolName, setBoolName] = useState(false);\n\n    const AfterSubmit_Addr = async (e) => {\n        e.preventDefault(); //redirect 방지\n\n        const addr = address;\n        const type = e.target[2].value;\n        const filter = e.target[3].value;\n        const filter_addr = e.target[4].value;\n\n        if (addr != '' && type != '병원종류') {\n            setJsondata([{}])\n            setLength(0)\n            axios( {\n                method: 'get',\n                url: '/newapi?inputAddr=' + addr + '&inputType=' + type + '&inputFilter=' + filter + '&addrFilter=' + filter_addr,\n            })\n            .then(response => {\n                console.log(\"데이터 : \" + response.data.results);\n                setJsondata(response.data.results);\n                console.log(\"데이터 길이: \" + response.data.results.length);\n                setLength(response.data.results.length)\n                if (response.data.results.length === 0) {\n                    setlistText('검색 결과가 없습니다.');\n                }\n                else {\n                    setlistText('');\n                }\n            })\n            .catch(function(err) {\n                console.log(err);\n            })\n        }\n        else {\n            alert(\"주소, 병원 종류, 보기 종류를 선택해주세요.\");\n        }\n    }\n\n    const AfterSubmit_Name = async (e) => {\n        e.preventDefault(); //redirect 방지\n        const hospital_name = e.target[0].value;\n        console.log(e.target[0].value);\n\n        if (hospital_name != '') {\n            setJsondata([{}])\n            setLength(0)\n            axios( {\n                method: 'get',\n                url: '/name-search?hospital_name=' + hospital_name,\n            })\n            .then(response => {\n                console.log(\"데이터 받아왔어요! : \" + response.data.results);\n                setJsondata(response.data.results);\n                console.log(\"데이터 길이: \" + response.data.results.length);\n                setLength(response.data.results.length)\n                if (response.data.results.length === 0) {\n                    setlistText('검색 결과가 없습니다.');\n                }\n                else {\n                    setlistText('');\n                }\n            })\n            .catch(function(err) {\n                console.log(err);\n            })\n        }\n        else {\n            alert(\"병원명을 입력해주세요.\");\n        }\n    }\n\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n    const ChangeAdddr = async (e) => {\n        setBoolAddr(true)\n        setBoolName(false)\n    }\n\n    const ChangeName = async (e) => {\n        setBoolAddr(false)\n        setBoolName(true)\n    }\n\n\n    return (\n        <div className=\"SeacrchBackground\">\n            <div className=\"BackgroundDiv\">\n            <MenuBar />\n            <p className=\"SearchMainText\">Search</p>\n            <button className={boolAddr ? 'SearchBtnActive' : 'SearchBtnNonActive'} onClick={e => ChangeAdddr(e)}>주소명 검색</button>\n            <button className={boolName ? 'SearchBtnActive' : 'SearchBtnNonActive'} onClick={e => ChangeName(e)}>병원명 검색</button>\n\n            {\n                boolAddr ?\n            <form onSubmit={AfterSubmit_Addr} >\n                    <div className=\"SearchSection\">\n                        <input value={address} className=\"inputAddr\"></input>\n                        <button type=\"button\" className=\"AddrBtn\" onClick={openModal}>주소 검색</button>\n                        <AddrModal open={modalOpen} close={closeModal} header=\"주소 검색\" address={address} setAddress={setAddress} setModalOpen={setModalOpen} autoClose></AddrModal>\n                        <select name=\"inputType\" className=\"symptom_level\">\n                            <option value=\"병원종류\">병원종류</option>\n                            <option value=\"이비인후과\">이비인후과</option>\n                            <option value=\"내과\">내과</option>\n                            <option value=\"외과\">외과</option>\n                            <option value=\"정형외과\">정형외과</option>\n                            <option value=\"안과\">안과</option>\n                            <option value=\"치과\">치과</option>\n                            <option value=\"피부과\">피부과</option>\n                            <option value=\"한의원\">한의원</option>\n                            <option value=\"가정의학과\">가정의학과</option>\n                        </select>\n                        <select name=\"inputFilter\" className=\"symptom\">\n                            <option value=\"all\">전체보기</option>\n                            <option value=\"infant\">소아과 보기</option>\n                        </select>\n                        <select name=\"AddrFilter\" className=\"symptom\">\n                            <option value=\"lo\">-로 단위</option>\n                            <option value=\"gu\">-구 단위</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            : null\n            }\n\n            {\n                boolName  ? \n                <form onSubmit={AfterSubmit_Name}>\n                    <input className=\"inputAddr\"></input>\n                    <button type=\"submit\" className=\"formBtn\">검색</button>\n                </form>\n                : null\n            }\n\n\n            \n            {\n            datalength === 0 ? null : <p>검색 결과는 <strong>{datalength}</strong>건입니다.</p>\n            }\n            <div className=\"cardDiv\">\n                {\n                datalength === 0 ? null :\n                jsondata.map((data) => (\n                    <div className=\"card1\">\n                        <p key={data._id} className=\"Hname\">{data.name}</p>\n                        <p key={data._id} className=\"Haddr\">{data.addr}</p>\n                        <p key={data._id} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" key={data._id} onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                        <button type=\"button\" className=\"DetailBtn\" key={data._id} onClick={e => openDModal(data, e)}>상세정보</button>\n                    </div>\n                ))\n                }\n                <HospitalsModal open={DmodalOpen} close={closeDModal} data={modalData} autoClose></HospitalsModal>\n                {\n                    datalength === 0 ?\n                    <p className=\"noneResultText\">{listText}</p>\n                    : null\n                }\n            </div>\n            </div>\n            <Footer></Footer>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/comments_privacy.js",["320","321","322"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport ChangePWD from \"../../pages/ChangePWD\";\n\nconst Comments_privacy = () => {\n  const [home_data, sethomeData] = useState();\n  const [homeLength, sethomeLength] = useState(0);\n\n  //modal\n  const [modalOpen, setModalOpen] = useState(false);\n    const openModal = (e) => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/mypage/', {\n    })\n    .then(function (response) {\n      sethomeData(response.data.home_results)\n      sethomeLength(response.data.home_results.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n    return (\n        <>\n          <div className=\"privacy_Div\">\n            <img className=\"privacy_img\" src=\"/svg/fi-rr-user.svg\"></img>\n            <p className=\"privacy_text\">회원정보</p>\n            <div className=\"privacy_contents\">\n              <div>\n              <span className=\"privacy_contents_text\">ID</span>\n              <span>{homeLength != 0 ? home_data.user_id : null}</span>\n              </div>\n              <div>\n              <span className=\"privacy_contents_text\">가입일시</span>\n              <span>{homeLength != 0 ? home_data.created_at : null}</span>\n              </div>\n              <button className=\"privacy_changePWD\"  onClick={e => openModal(e)}>비밀번호 변경</button>\n              <ChangePWD open={modalOpen} close={closeModal} header=\"비밀번호 변경\" setModalOpen={setModalOpen} autoClose></ChangePWD>\n            </div>\n          </div>\n        </>\n    );\n}\n\nexport default Comments_privacy;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Withdrawal.js",["323","324","325","326"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/reviews_data.js",["327","328"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"./contents_none\";\n\nconst Reviews_data = () => {\n  const [reviews_data, setReviewsData] = useState();\n  const [reviewsLength, setreviewsLength] = useState(0);\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/mypage/', {\n    })\n    .then(function (response) {\n      console.log(\"reviews_results: \" + response.data.reviews_results[1].hospital_id[0].name)\n      setReviewsData(response.data.reviews_results)\n      setreviewsLength(response.data.reviews_results.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                reviewsLength == 0 ? \n                <Contents_none text=\"작성된 리뷰가 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                reviews_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\">{data.description}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/contents_none.js",["329"],"import React from \"react\";\n\nconst comments_none = (props) => {\n    return (\n        <>\n          <div className=\"non_Div\">\n          <img className=\"non_img\" src=\"/svg/fi-rr-cross-small.svg\"></img>\n            <p className=\"non_text\">{props.text}</p>\n          </div>\n        </>\n    );\n}\n\nexport default comments_none;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/reports_data.js",["330","331"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"./contents_none\";\n\nconst Reviews_data = () => {\n  const [reports_data, setreportsData] = useState();\n  const [reportsLength, setreportsLength] = useState(0);\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/mypage/', {\n    })\n    .then(function (response) {\n      console.log(\"reports_results: \" + response.data.reports_results)\n      setreportsData(response.data.reports_results)\n      setreportsLength(response.data.reports_results.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                reportsLength == 0 ? \n                <Contents_none text=\"신고한 내역이 없습니다.\"></Contents_none>\n                :\n                <div className=\"review_Div\">\n                {\n                reports_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\">{data.hospital_id[0].name}</span>\n                        <span key={index} className=\"comment_btn\">{data.if_confirmed ? \"승인\" : \"비승인\"}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                        \n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/board_data.js",["332","333","334"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"./contents_none\";\n\nconst Reviews_data = () => {\n  const [boards_data, setboardsData] = useState();\n  const [boardsLength, setboardsLength] = useState(0);\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/mypage/', {\n    })\n    .then(function (response) {\n      console.log(\"boards_results: \" + response.data.communities_results)\n      setboardsData(response.data.communities_results)\n      setboardsLength(response.data.communities_results.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                boardsLength == 0 ? \n                <Contents_none text=\"작성된 게시글이 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                boards_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\">{data.community == \"clinics\" ? \"상담\" : \"질문\"}</span>\n                        <span key={index} className=\"comment_Desc\">{data.title}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/mypageComponents/comments_data.js",["335","336"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"./contents_none\";\n\nconst Reviews_data = () => {\n  const [comments_data, setCommentsData] = useState();\n  const [commentsLength, setcommentsLength] = useState(0);\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/mypage/', {\n    })\n    .then(function (response) {\n      console.log(\"comments_results: \" + response.data.comments_results)\n      setCommentsData(response.data.comments_results)\n      setcommentsLength(response.data.comments_results.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                commentsLength == 0 ? \n                <Contents_none text=\"작성된 댓글이 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                comments_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\">{data.description}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/Adminpage.js",["337","338","339","340","341"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\nimport Comment_data from \"../../components/mypageComponents/comments_data\";\nimport User_data_admin from \"./User_data_admin\";\nimport Report_data_admin from \"./Reports_data_admin\";\nimport Report_accept_admin from \"./Reports_accept_admin\";\n\nconst Adminpage = () => {\n  const [boolUser, setBoolUser] = useState(true);\n  const [boolHospital, setBoolHospital] = useState(false);\n  const [boolReports, setBoolReports] = useState(false);\n\n  useEffect(() => {\n  }, []);\n\n  const UserArea = async (e) => {\n    setBoolUser(!(boolUser))\n    setBoolHospital(false)\n    setBoolReports(false)\n  }\n\n  const HospitalArea = async (e) => {\n    setBoolUser(false)\n    setBoolHospital(!(boolHospital))\n    setBoolReports(false)\n  }\n\n  const ReportsArea = async (e) => {\n    setBoolUser(false)\n    setBoolHospital(false)\n    setBoolReports(!(boolReports))\n  }\n\n    return (\n        <div className=\"MypageBackground\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">관리자 페이지</span>\n          </div>\n\n          <div className=\"mypage_Area\">\n            <button className={boolUser ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => UserArea(e)}>회원관리</button>\n            <button className={boolHospital ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => HospitalArea(e)}>병원신고현황</button>\n            <button className={boolReports ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => ReportsArea(e)}>신고접수관리</button>\n          </div>\n\n          {\n            boolUser ?\n            <User_data_admin></User_data_admin>\n            : \n            null\n          }\n          {\n            boolHospital ?\n            <Report_data_admin></Report_data_admin>\n            : \n            null\n          }\n          {\n            boolReports ?\n            <Report_accept_admin></Report_accept_admin>\n            : \n            null\n          }\n\n          <Footer></Footer>\n        </div>\n    );\n}\n\nexport default Adminpage;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/ChangePWD.js",["342","343","344","345","346"],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"axios\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const { open, close, header } = props;\n  const setModalOpen = props.setModalOpen;\n  const navigate = useNavigate();\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    console.log(\"0번: \" + e.target[0].value); //아이디\n    console.log(\"1번: \" + e.target[1].value); //old 비밀번호\n    console.log(\"2번: \" + e.target[2].value); //new 비밀번호\n    console.log(\"3번: \" + e.target[3].value); //new 비밀번호 확인\n  \n    const input_id = e.target[0].value;\n    const old_password = e.target[1].value;\n    const new_password = e.target[2].value;\n    const new_password_check = e.target[3].value\n    \n  if ( window.confirm(\"새 비밀번호로 변경됩니다. \\n변경하시겠습니까?\") && e.target[0].value != '' && e.target[1].value != '') {\n      axios.post(\"/process/change-password\", {\n        input_id: input_id,\n        old_password: old_password,\n        new_password: new_password,\n        new_password_check: new_password_check,\n      })\n      .then(function (response) {\n        if (response.data.text == \"성공\") {\n          alert(\"비밀번호가 정상적으로 변경되었습니다.\")\n          setModalOpen(false);\n          navigate('/mypage')\n        }\n        else {\n          alert(response.data.text)\n        }\n      })\n      .catch(function (error) {\n        alert(\"비밀번호 변경 실패\");\n        console.log(error)\n      })\n  }\n  else {\n      alert(\"입력해주세요.\");\n  }\n}\n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>&times;</button>\n          </header>\n          <main>\n          <form className=\"commentsForm\" onSubmit={AfterSubmit}>\n            <input type=\"text\" required name=\"input_id\" id=\"inputId\" placeholder=\"id\" minlength=\"5\" maxlength=\"20\"></input>\n            <input type=\"password\" required name=\"old_password\" id=\"inputPassword\" minlength=\"7\" placeholder=\"old password\"></input>\n            <input type=\"password\" required name=\"new_password\" id=\"inputPassword\" minlength=\"7\" placeholder=\"new password\"></input>\n            <input type=\"password\" required name=\"new_password_check\" id=\"inputPassword\" minlength=\"7\" placeholder=\"check password\"></input>\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n          </form>\n          </main>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/User_data_admin.js",["347","348","349","350"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport {useNavigate, useLocation} from \"react-router\";\nimport Contents_none from \"../../components/mypageComponents/contents_none\";\n\nconst Reviews_data = () => {\n  const [user_data, setuserData] = useState();\n  const [userLength, setuserLength] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/admin/', {\n    })\n    .then(function (response) {\n      console.log(\"user_results: \" + response.data.users)\n      setuserData(response.data.users)\n      setuserLength(response.data.users.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n  const openDetail = (value, e) => {\n    navigate('/admin/'+value, { state: {user_id: value}});\n  }\n\n\n\n    return (\n        <>\n            {\n                userLength == 0 ? \n                <Contents_none text=\"가입된 회원이 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                user_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\" onClick={e => openDetail(data._id, e)}>{data.user_id}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                        <span key={index} className=\"comment_Data\">{data.is_admin ? \"관리자\" : \"회원\"}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/Reports_accept_admin.js",["351","352","353"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"../../components/mypageComponents/contents_none\";\n\nconst Reviews_data = () => {\n  const [Reports_data, setReportsData] = useState();\n  const [ReportsLength, setReportsLength] = useState(0);\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/mypage/', {\n    })\n    .then(function (response) {\n      console.log(\"Reports_results: \" + response.data.Reports_results)\n      setReportsData(response.data.Reports_results)\n      setReportsLength(response.data.reports_results.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n                <div className=\"review_Div\">\n                    <div className=\"review_comment_div\">\n                        <span className=\"comment_No\">1</span>\n                        <span className=\"comment_Desc\">라미체성형외과의원</span>\n                        <span className=\"comment_Data\">hyj3463</span>\n                        <button className=\"ACBTN\">승인</button><button className=\"REBTN\">거절</button>\n                    </div>\n                    <div className=\"review_comment_div\">\n                        <span className=\"comment_No\">2</span>\n                        <span className=\"comment_Desc\">송파길신경외과의원</span>\n                        <span className=\"comment_Data\">hyj3463@naver.com</span>\n                        <button className=\"ACBTN\">승인</button><button className=\"REBTN\">거절</button>\n                    </div>\n                    <div className=\"review_comment_div\">\n                        <span className=\"comment_No\">3</span>\n                        <span className=\"comment_Desc\">잠실대항장문서울외과의원</span>\n                        <span className=\"comment_Data\">hyj3463@naver.com</span>\n                        <button className=\"ACBTN\">승인</button><button className=\"REBTN\">거절</button>\n                    </div>\n                    <div className=\"review_comment_div\">\n                        <span className=\"comment_No\">4</span>\n                        <span className=\"comment_Desc\">참외과 참소아청소년과의원</span>\n                        <span className=\"comment_Data\">nmg3463</span>\n                        <button className=\"ACBTN\">승인</button><button className=\"REBTN\">거절</button>\n                    </div>\n                </div>\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/Reports_data_admin.js",["354","355"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"../../components/mypageComponents/contents_none\";\n\nconst Reviews_data = () => {\n  const [Hospitals_data, setHospitalsData] = useState();\n  const [HospitalsLength, setHospitalsLength] = useState(0);\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/admin/', {\n    })\n    .then(function (response) {\n      setHospitalsData(response.data.hospitals)\n      setHospitalsLength(response.data.hospitals.length)\n\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                HospitalsLength == 0 ? \n                <Contents_none text=\"병원 리스트가 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                Hospitals_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\">{data.description}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/User_data_admin_Detail.js",["356","357","358","359","360","361","362","363","364","365","366","367","368"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport {useNavigate, useLocation} from \"react-router\";\nimport MenuBar from \"../../components/MenuBar\";\nimport Footer from \"../../components/Footer\";\nimport Contents_none from \"../../components/mypageComponents/contents_none\";\nimport Reviews_data_admin from \"./admin_components/reviews_data_admin\";\nimport Reports_data_admin from \"./admin_components/reports_data_admin\";\nimport Communities_data_admin from \"./admin_components/communities_data_admin\";\nimport Comments_data_admin from \"./admin_components/comments_data_admin\";\n\nconst Reviews_data = () => {\n  const [user_reviews, setuserReviews] = useState();\n  const [user_reports, setuserReports] = useState();\n  const [user_communities, setuserCommunities] = useState();\n  const [user_comments, setuserComments] = useState();\n  const [userLength, setuserLength] = useState(0);\n  const [user_id, setuserId] = useState();\n  const location = useLocation();\n\n  const [boolReviews, setBoolReviews] = useState(false);\n  const [boolReports, setBoolReports] = useState(false);\n  const [boolCommunities, setBoolCommunities] = useState(false);\n  const [boolComments, setBoolComments] = useState(false);\n\n  useEffect(() => {\n    LoadData();\n    console.log(location.state.user_id)\n    setuserId(location.state.user_id);\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/admin/member' + location.state.id, {\n    })\n    .then(function (response) {\n      setuserReviews(response.data.reviews_results)\n      setuserReports(response.data.reports_results)\n      setuserCommunities(response.data.communities_results)\n      setuserComments(response.data.comments_results)\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n  const ReviewsArea = async (e) => {\n    setBoolReviews(!(boolReviews))\n    setBoolReports(false)\n    setBoolCommunities(false)\n    setBoolComments(false)\n  }\n\n  const ReportsArea = async (e) => {\n    setBoolReviews(false)\n    setBoolReports(!(boolReports))\n    setBoolCommunities(false)\n    setBoolComments(false)\n  }\n\n  const CommunitiesArea = async (e) => {\n    setBoolReviews(false)\n    setBoolReports(false)\n    setBoolCommunities(!(boolCommunities))\n    setBoolComments(false)\n  }\n\n  const CommentsArea = async (e) => {\n    setBoolReviews(false)\n    setBoolReports(false)\n    setBoolCommunities(false)\n    setBoolComments(!(boolComments))\n  }\n\n\n    return (\n        <>\n        <div className=\"MypageBackground\">\n          <MenuBar></MenuBar>\n          <div className=\"MainTopDiv\">\n            <span className=\"MainTopSpan\">{user_id}</span>\n          </div>\n                <div className=\"mypage_Area\">\n                  <button className={boolReviews ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => ReviewsArea(e)}>리뷰</button>\n                  <button className={boolReports ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => ReportsArea(e)}>신고</button>\n                  <button className={boolCommunities ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => CommunitiesArea(e)}>게시글</button>\n                  <button className={boolComments ? 'mypage_AreaBtnActive' : 'mypage_AreaBtn'} onClick={e => CommentsArea(e)}>댓글</button>\n                </div>\n\n                {\n                  boolReviews ?\n                  <Reviews_data_admin user_id={user_id}></Reviews_data_admin>\n                  : \n                  null\n                }\n                {\n                  boolReports ?\n                  <Reports_data_admin user_id={user_id}></Reports_data_admin>\n                  : \n                  null\n                }\n                {\n                  boolCommunities ?\n                  <Communities_data_admin user_id={user_id}></Communities_data_admin>\n                  : \n                  null\n                }\n                {\n                  boolComments ?\n                  <Comments_data_admin user_id={user_id}></Comments_data_admin>\n                  : \n                  null\n                }\n          <Footer></Footer>\n        </div>\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/reviews_data_admin.js",["369","370","371"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"../../../components/mypageComponents/contents_none\";\n\nconst Reviews_data = (props) => {\n  const [user_reviews, setuserReviews] = useState();\n  const [reviewsLength, setreviewsLength] = useState(0);\n  const [user_id, setUserId] = useState();\n\n  useEffect(() => {\n    LoadData();\n    setUserId(props.user_id)\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/admin/member/' + user_id, {\n    })\n    .then(function (response) {\n      setuserReviews(response.data.reviews_results)\n      setreviewsLength(response.data.reviews_results.length)\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data from Detail_reviews\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                reviewsLength == 0 ? \n                <Contents_none text=\"작성한 리뷰가 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                user_reviews.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\">{data.hospital_id[0].name}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                        <span key={index} className=\"comment_Data\">{data.description}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/reports_data_admin.js",["372","373","374"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/communities_data_admin.js",["375","376","377"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/admin_components/comments_data_admin.js",["378","379","380"],{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":45,"column":45,"nodeType":"387","messageId":"388","endLine":45,"endColumn":71},{"ruleId":"381","replacedBy":"389"},{"ruleId":"383","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":46,"column":38,"nodeType":"393","messageId":"394","endLine":46,"endColumn":40},{"ruleId":"391","severity":1,"message":"395","line":46,"column":73,"nodeType":"393","messageId":"394","endLine":46,"endColumn":75},{"ruleId":"391","severity":1,"message":"392","line":50,"column":44,"nodeType":"393","messageId":"394","endLine":50,"endColumn":46},{"ruleId":"391","severity":1,"message":"395","line":50,"column":78,"nodeType":"393","messageId":"394","endLine":50,"endColumn":80},{"ruleId":"396","severity":1,"message":"397","line":79,"column":36,"nodeType":"387","endLine":79,"endColumn":64},{"ruleId":"398","severity":1,"message":"399","line":20,"column":45,"nodeType":"387","endLine":20,"endColumn":110},{"ruleId":"398","severity":1,"message":"399","line":23,"column":42,"nodeType":"387","endLine":23,"endColumn":104},{"ruleId":"398","severity":1,"message":"399","line":26,"column":41,"nodeType":"387","endLine":26,"endColumn":101},{"ruleId":"398","severity":1,"message":"399","line":34,"column":11,"nodeType":"387","endLine":34,"endColumn":77},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"400","severity":1,"message":"405","line":6,"column":9,"nodeType":"402","messageId":"403","endLine":6,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"406","line":2,"column":16,"nodeType":"402","messageId":"403","endLine":2,"endColumn":27},{"ruleId":"400","severity":1,"message":"407","line":17,"column":9,"nodeType":"402","messageId":"403","endLine":17,"endColumn":22},{"ruleId":"400","severity":1,"message":"408","line":18,"column":9,"nodeType":"402","messageId":"403","endLine":18,"endColumn":23},{"ruleId":"400","severity":1,"message":"409","line":19,"column":9,"nodeType":"402","messageId":"403","endLine":19,"endColumn":21},{"ruleId":"391","severity":1,"message":"395","line":50,"column":32,"nodeType":"393","messageId":"394","endLine":50,"endColumn":34},{"ruleId":"400","severity":1,"message":"410","line":3,"column":10,"nodeType":"402","messageId":"403","endLine":3,"endColumn":19},{"ruleId":"400","severity":1,"message":"411","line":3,"column":34,"nodeType":"402","messageId":"403","endLine":3,"endColumn":47},{"ruleId":"412","severity":1,"message":"413","line":20,"column":6,"nodeType":"414","endLine":20,"endColumn":8,"suggestions":"415"},{"ruleId":"391","severity":1,"message":"392","line":58,"column":27,"nodeType":"393","messageId":"394","endLine":58,"endColumn":29},{"ruleId":"391","severity":1,"message":"395","line":100,"column":42,"nodeType":"393","messageId":"394","endLine":100,"endColumn":44},{"ruleId":"400","severity":1,"message":"410","line":3,"column":10,"nodeType":"402","messageId":"403","endLine":3,"endColumn":19},{"ruleId":"400","severity":1,"message":"416","line":3,"column":21,"nodeType":"402","messageId":"403","endLine":3,"endColumn":32},{"ruleId":"400","severity":1,"message":"411","line":3,"column":34,"nodeType":"402","messageId":"403","endLine":3,"endColumn":47},{"ruleId":"400","severity":1,"message":"417","line":7,"column":8,"nodeType":"402","messageId":"403","endLine":7,"endColumn":17},{"ruleId":"391","severity":1,"message":"392","line":31,"column":27,"nodeType":"393","messageId":"394","endLine":31,"endColumn":29},{"ruleId":"381","replacedBy":"418"},{"ruleId":"383","replacedBy":"419"},{"ruleId":"391","severity":1,"message":"395","line":23,"column":32,"nodeType":"393","messageId":"394","endLine":23,"endColumn":34},{"ruleId":"391","severity":1,"message":"395","line":26,"column":37,"nodeType":"393","messageId":"394","endLine":26,"endColumn":39},{"ruleId":"400","severity":1,"message":"420","line":2,"column":10,"nodeType":"402","messageId":"403","endLine":2,"endColumn":14},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"400","severity":1,"message":"405","line":7,"column":9,"nodeType":"402","messageId":"403","endLine":7,"endColumn":16},{"ruleId":"400","severity":1,"message":"421","line":12,"column":9,"nodeType":"402","messageId":"403","endLine":12,"endColumn":17},{"ruleId":"400","severity":1,"message":"422","line":14,"column":9,"nodeType":"402","messageId":"403","endLine":14,"endColumn":23},{"ruleId":"391","severity":1,"message":"392","line":28,"column":27,"nodeType":"393","messageId":"394","endLine":28,"endColumn":29},{"ruleId":"400","severity":1,"message":"423","line":1,"column":8,"nodeType":"402","messageId":"403","endLine":1,"endColumn":13},{"ruleId":"385","severity":1,"message":"424","line":72,"column":13,"nodeType":"387","messageId":"388","endLine":72,"endColumn":27},{"ruleId":"385","severity":1,"message":"425","line":78,"column":13,"nodeType":"387","messageId":"388","endLine":78,"endColumn":27},{"ruleId":"385","severity":1,"message":"426","line":84,"column":13,"nodeType":"387","messageId":"388","endLine":84,"endColumn":26},{"ruleId":"385","severity":1,"message":"427","line":90,"column":13,"nodeType":"387","messageId":"388","endLine":90,"endColumn":28},{"ruleId":"385","severity":1,"message":"428","line":98,"column":13,"nodeType":"387","messageId":"388","endLine":98,"endColumn":31},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"400","severity":1,"message":"429","line":4,"column":8,"nodeType":"402","messageId":"403","endLine":4,"endColumn":20},{"ruleId":"400","severity":1,"message":"421","line":10,"column":9,"nodeType":"402","messageId":"403","endLine":10,"endColumn":17},{"ruleId":"391","severity":1,"message":"395","line":25,"column":32,"nodeType":"393","messageId":"394","endLine":25,"endColumn":34},{"ruleId":"391","severity":1,"message":"395","line":29,"column":37,"nodeType":"393","messageId":"394","endLine":29,"endColumn":39},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"400","severity":1,"message":"421","line":9,"column":9,"nodeType":"402","messageId":"403","endLine":9,"endColumn":17},{"ruleId":"400","severity":1,"message":"420","line":4,"column":10,"nodeType":"402","messageId":"403","endLine":4,"endColumn":14},{"ruleId":"400","severity":1,"message":"430","line":12,"column":10,"nodeType":"402","messageId":"403","endLine":12,"endColumn":17},{"ruleId":"400","severity":1,"message":"431","line":12,"column":19,"nodeType":"402","messageId":"403","endLine":12,"endColumn":28},{"ruleId":"400","severity":1,"message":"432","line":13,"column":10,"nodeType":"402","messageId":"403","endLine":13,"endColumn":18},{"ruleId":"400","severity":1,"message":"433","line":13,"column":20,"nodeType":"402","messageId":"403","endLine":13,"endColumn":30},{"ruleId":"400","severity":1,"message":"434","line":14,"column":10,"nodeType":"402","messageId":"403","endLine":14,"endColumn":18},{"ruleId":"400","severity":1,"message":"435","line":14,"column":20,"nodeType":"402","messageId":"403","endLine":14,"endColumn":31},{"ruleId":"400","severity":1,"message":"436","line":19,"column":7,"nodeType":"402","messageId":"403","endLine":19,"endColumn":9},{"ruleId":"412","severity":1,"message":"413","line":26,"column":6,"nodeType":"414","endLine":26,"endColumn":12,"suggestions":"437"},{"ruleId":"391","severity":1,"message":"395","line":94,"column":39,"nodeType":"393","messageId":"394","endLine":94,"endColumn":41},{"ruleId":"398","severity":1,"message":"399","line":105,"column":71,"nodeType":"387","endLine":105,"endColumn":132},{"ruleId":"400","severity":1,"message":"420","line":4,"column":10,"nodeType":"402","messageId":"403","endLine":4,"endColumn":14},{"ruleId":"400","severity":1,"message":"430","line":12,"column":10,"nodeType":"402","messageId":"403","endLine":12,"endColumn":17},{"ruleId":"400","severity":1,"message":"431","line":12,"column":19,"nodeType":"402","messageId":"403","endLine":12,"endColumn":28},{"ruleId":"400","severity":1,"message":"432","line":13,"column":10,"nodeType":"402","messageId":"403","endLine":13,"endColumn":18},{"ruleId":"400","severity":1,"message":"433","line":13,"column":20,"nodeType":"402","messageId":"403","endLine":13,"endColumn":30},{"ruleId":"400","severity":1,"message":"434","line":14,"column":10,"nodeType":"402","messageId":"403","endLine":14,"endColumn":18},{"ruleId":"400","severity":1,"message":"435","line":14,"column":20,"nodeType":"402","messageId":"403","endLine":14,"endColumn":31},{"ruleId":"400","severity":1,"message":"436","line":19,"column":7,"nodeType":"402","messageId":"403","endLine":19,"endColumn":9},{"ruleId":"412","severity":1,"message":"413","line":26,"column":6,"nodeType":"414","endLine":26,"endColumn":12,"suggestions":"438"},{"ruleId":"391","severity":1,"message":"395","line":93,"column":39,"nodeType":"393","messageId":"394","endLine":93,"endColumn":41},{"ruleId":"398","severity":1,"message":"399","line":102,"column":69,"nodeType":"387","endLine":102,"endColumn":130},{"ruleId":"398","severity":1,"message":"399","line":19,"column":71,"nodeType":"387","endLine":19,"endColumn":141},{"ruleId":"398","severity":1,"message":"399","line":22,"column":69,"nodeType":"387","endLine":22,"endColumn":129},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":15,"column":27,"nodeType":"393","messageId":"394","endLine":15,"endColumn":29},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":15,"column":27,"nodeType":"393","messageId":"394","endLine":15,"endColumn":29},{"ruleId":"400","severity":1,"message":"439","line":13,"column":10,"nodeType":"402","messageId":"403","endLine":13,"endColumn":18},{"ruleId":"400","severity":1,"message":"430","line":16,"column":10,"nodeType":"402","messageId":"403","endLine":16,"endColumn":17},{"ruleId":"400","severity":1,"message":"431","line":16,"column":19,"nodeType":"402","messageId":"403","endLine":16,"endColumn":28},{"ruleId":"400","severity":1,"message":"433","line":17,"column":20,"nodeType":"402","messageId":"403","endLine":17,"endColumn":30},{"ruleId":"412","severity":1,"message":"440","line":23,"column":13,"nodeType":"441","endLine":27,"endColumn":4},{"ruleId":"412","severity":1,"message":"442","line":27,"column":6,"nodeType":"414","endLine":27,"endColumn":8,"suggestions":"443"},{"ruleId":"391","severity":1,"message":"392","line":49,"column":27,"nodeType":"393","messageId":"394","endLine":49,"endColumn":29},{"ruleId":"391","severity":1,"message":"392","line":53,"column":38,"nodeType":"393","messageId":"394","endLine":53,"endColumn":40},{"ruleId":"391","severity":1,"message":"395","line":118,"column":42,"nodeType":"393","messageId":"394","endLine":118,"endColumn":44},{"ruleId":"400","severity":1,"message":"439","line":13,"column":10,"nodeType":"402","messageId":"403","endLine":13,"endColumn":18},{"ruleId":"400","severity":1,"message":"432","line":17,"column":10,"nodeType":"402","messageId":"403","endLine":17,"endColumn":18},{"ruleId":"400","severity":1,"message":"433","line":17,"column":20,"nodeType":"402","messageId":"403","endLine":17,"endColumn":30},{"ruleId":"412","severity":1,"message":"442","line":28,"column":6,"nodeType":"414","endLine":28,"endColumn":8,"suggestions":"444"},{"ruleId":"391","severity":1,"message":"392","line":60,"column":27,"nodeType":"393","messageId":"394","endLine":60,"endColumn":29},{"ruleId":"391","severity":1,"message":"392","line":64,"column":38,"nodeType":"393","messageId":"394","endLine":64,"endColumn":40},{"ruleId":"391","severity":1,"message":"395","line":104,"column":32,"nodeType":"393","messageId":"394","endLine":104,"endColumn":34},{"ruleId":"391","severity":1,"message":"395","line":151,"column":42,"nodeType":"393","messageId":"394","endLine":151,"endColumn":44},{"ruleId":"391","severity":1,"message":"395","line":154,"column":33,"nodeType":"393","messageId":"394","endLine":154,"endColumn":35},{"ruleId":"400","severity":1,"message":"401","line":1,"column":16,"nodeType":"402","messageId":"403","endLine":1,"endColumn":25},{"ruleId":"400","severity":1,"message":"445","line":14,"column":12,"nodeType":"402","messageId":"403","endLine":14,"endColumn":21},{"ruleId":"400","severity":1,"message":"446","line":14,"column":23,"nodeType":"402","messageId":"403","endLine":14,"endColumn":35},{"ruleId":"400","severity":1,"message":"447","line":15,"column":12,"nodeType":"402","messageId":"403","endLine":15,"endColumn":21},{"ruleId":"400","severity":1,"message":"448","line":15,"column":23,"nodeType":"402","messageId":"403","endLine":15,"endColumn":35},{"ruleId":"400","severity":1,"message":"449","line":16,"column":12,"nodeType":"402","messageId":"403","endLine":16,"endColumn":23},{"ruleId":"400","severity":1,"message":"450","line":16,"column":25,"nodeType":"402","messageId":"403","endLine":16,"endColumn":39},{"ruleId":"391","severity":1,"message":"392","line":55,"column":18,"nodeType":"393","messageId":"394","endLine":55,"endColumn":20},{"ruleId":"391","severity":1,"message":"392","line":55,"column":32,"nodeType":"393","messageId":"394","endLine":55,"endColumn":34},{"ruleId":"391","severity":1,"message":"392","line":88,"column":27,"nodeType":"393","messageId":"394","endLine":88,"endColumn":29},{"ruleId":"398","severity":1,"message":"399","line":38,"column":13,"nodeType":"387","endLine":38,"endColumn":68},{"ruleId":"391","severity":1,"message":"392","line":43,"column":33,"nodeType":"393","messageId":"394","endLine":43,"endColumn":35},{"ruleId":"391","severity":1,"message":"392","line":47,"column":33,"nodeType":"393","messageId":"394","endLine":47,"endColumn":35},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":19,"column":87,"nodeType":"393","messageId":"394","endLine":19,"endColumn":89},{"ruleId":"391","severity":1,"message":"392","line":19,"column":114,"nodeType":"393","messageId":"394","endLine":19,"endColumn":116},{"ruleId":"391","severity":1,"message":"395","line":31,"column":31,"nodeType":"393","messageId":"394","endLine":31,"endColumn":33},{"ruleId":"385","severity":1,"message":"451","line":32,"column":17,"nodeType":"387","messageId":"388","endLine":32,"endColumn":53},{"ruleId":"398","severity":1,"message":"399","line":7,"column":11,"nodeType":"387","endLine":7,"endColumn":69},{"ruleId":"391","severity":1,"message":"395","line":31,"column":31,"nodeType":"393","messageId":"394","endLine":31,"endColumn":33},{"ruleId":"385","severity":1,"message":"451","line":32,"column":17,"nodeType":"387","messageId":"388","endLine":32,"endColumn":53},{"ruleId":"391","severity":1,"message":"395","line":31,"column":30,"nodeType":"393","messageId":"394","endLine":31,"endColumn":32},{"ruleId":"385","severity":1,"message":"451","line":32,"column":17,"nodeType":"387","messageId":"388","endLine":32,"endColumn":54},{"ruleId":"391","severity":1,"message":"395","line":39,"column":84,"nodeType":"393","messageId":"394","endLine":39,"endColumn":86},{"ruleId":"391","severity":1,"message":"395","line":31,"column":32,"nodeType":"393","messageId":"394","endLine":31,"endColumn":34},{"ruleId":"385","severity":1,"message":"451","line":32,"column":17,"nodeType":"387","messageId":"388","endLine":32,"endColumn":53},{"ruleId":"400","severity":1,"message":"423","line":1,"column":8,"nodeType":"402","messageId":"403","endLine":1,"endColumn":13},{"ruleId":"400","severity":1,"message":"452","line":5,"column":8,"nodeType":"402","messageId":"403","endLine":5,"endColumn":20},{"ruleId":"385","severity":1,"message":"453","line":51,"column":13,"nodeType":"387","messageId":"388","endLine":51,"endColumn":30},{"ruleId":"385","severity":1,"message":"454","line":57,"column":13,"nodeType":"387","messageId":"388","endLine":57,"endColumn":32},{"ruleId":"385","severity":1,"message":"455","line":63,"column":13,"nodeType":"387","messageId":"388","endLine":63,"endColumn":34},{"ruleId":"400","severity":1,"message":"401","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":26},{"ruleId":"400","severity":1,"message":"404","line":1,"column":28,"nodeType":"402","messageId":"403","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":23,"column":74,"nodeType":"393","messageId":"394","endLine":23,"endColumn":76},{"ruleId":"391","severity":1,"message":"392","line":23,"column":101,"nodeType":"393","messageId":"394","endLine":23,"endColumn":103},{"ruleId":"391","severity":1,"message":"395","line":31,"column":32,"nodeType":"393","messageId":"394","endLine":31,"endColumn":34},{"ruleId":"400","severity":1,"message":"420","line":3,"column":10,"nodeType":"402","messageId":"403","endLine":3,"endColumn":14},{"ruleId":"400","severity":1,"message":"416","line":4,"column":22,"nodeType":"402","messageId":"403","endLine":4,"endColumn":33},{"ruleId":"391","severity":1,"message":"395","line":39,"column":28,"nodeType":"393","messageId":"394","endLine":39,"endColumn":30},{"ruleId":"385","severity":1,"message":"451","line":40,"column":17,"nodeType":"387","messageId":"388","endLine":40,"endColumn":53},{"ruleId":"400","severity":1,"message":"456","line":3,"column":8,"nodeType":"402","messageId":"403","endLine":3,"endColumn":21},{"ruleId":"400","severity":1,"message":"457","line":6,"column":10,"nodeType":"402","messageId":"403","endLine":6,"endColumn":22},{"ruleId":"400","severity":1,"message":"458","line":7,"column":10,"nodeType":"402","messageId":"403","endLine":7,"endColumn":23},{"ruleId":"391","severity":1,"message":"395","line":30,"column":33,"nodeType":"393","messageId":"394","endLine":30,"endColumn":35},{"ruleId":"385","severity":1,"message":"451","line":31,"column":17,"nodeType":"387","messageId":"388","endLine":31,"endColumn":53},{"ruleId":"400","severity":1,"message":"406","line":3,"column":9,"nodeType":"402","messageId":"403","endLine":3,"endColumn":20},{"ruleId":"400","severity":1,"message":"456","line":6,"column":8,"nodeType":"402","messageId":"403","endLine":6,"endColumn":21},{"ruleId":"400","severity":1,"message":"459","line":13,"column":10,"nodeType":"402","messageId":"403","endLine":13,"endColumn":22},{"ruleId":"400","severity":1,"message":"460","line":14,"column":10,"nodeType":"402","messageId":"403","endLine":14,"endColumn":22},{"ruleId":"400","severity":1,"message":"461","line":15,"column":10,"nodeType":"402","messageId":"403","endLine":15,"endColumn":26},{"ruleId":"400","severity":1,"message":"462","line":16,"column":10,"nodeType":"402","messageId":"403","endLine":16,"endColumn":23},{"ruleId":"400","severity":1,"message":"463","line":17,"column":10,"nodeType":"402","messageId":"403","endLine":17,"endColumn":20},{"ruleId":"400","severity":1,"message":"464","line":17,"column":22,"nodeType":"402","messageId":"403","endLine":17,"endColumn":35},{"ruleId":"412","severity":1,"message":"465","line":30,"column":6,"nodeType":"414","endLine":30,"endColumn":8,"suggestions":"466"},{"ruleId":"385","severity":1,"message":"467","line":91,"column":19,"nodeType":"387","messageId":"388","endLine":91,"endColumn":57},{"ruleId":"385","severity":1,"message":"468","line":97,"column":19,"nodeType":"387","messageId":"388","endLine":97,"endColumn":57},{"ruleId":"385","severity":1,"message":"469","line":103,"column":19,"nodeType":"387","messageId":"388","endLine":103,"endColumn":61},{"ruleId":"385","severity":1,"message":"470","line":109,"column":19,"nodeType":"387","messageId":"388","endLine":109,"endColumn":58},{"ruleId":"412","severity":1,"message":"471","line":13,"column":6,"nodeType":"414","endLine":13,"endColumn":8,"suggestions":"472"},{"ruleId":"391","severity":1,"message":"395","line":31,"column":31,"nodeType":"393","messageId":"394","endLine":31,"endColumn":33},{"ruleId":"385","severity":1,"message":"451","line":32,"column":17,"nodeType":"387","messageId":"388","endLine":32,"endColumn":53},{"ruleId":"412","severity":1,"message":"473","line":12,"column":6,"nodeType":"414","endLine":12,"endColumn":8,"suggestions":"474"},{"ruleId":"391","severity":1,"message":"395","line":30,"column":31,"nodeType":"393","messageId":"394","endLine":30,"endColumn":33},{"ruleId":"385","severity":1,"message":"451","line":31,"column":17,"nodeType":"387","messageId":"388","endLine":31,"endColumn":52},{"ruleId":"412","severity":1,"message":"473","line":12,"column":6,"nodeType":"414","endLine":12,"endColumn":8,"suggestions":"475"},{"ruleId":"391","severity":1,"message":"395","line":30,"column":31,"nodeType":"393","messageId":"394","endLine":30,"endColumn":33},{"ruleId":"385","severity":1,"message":"451","line":31,"column":17,"nodeType":"387","messageId":"388","endLine":31,"endColumn":54},{"ruleId":"412","severity":1,"message":"473","line":12,"column":6,"nodeType":"414","endLine":12,"endColumn":8,"suggestions":"476"},{"ruleId":"391","severity":1,"message":"395","line":30,"column":31,"nodeType":"393","messageId":"394","endLine":30,"endColumn":33},{"ruleId":"385","severity":1,"message":"451","line":31,"column":17,"nodeType":"387","messageId":"388","endLine":31,"endColumn":53},"no-native-reassign",["477"],"no-negated-in-lhs",["478"],"react/jsx-pascal-case","Imported JSX component User_data_admin_Detail must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase",["477"],["478"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'address' is assigned a value but never used.","'useNavigate' is defined but never used.","'opendate_year' is assigned a value but never used.","'opendate_month' is assigned a value but never used.","'opendate_day' is assigned a value but never used.","'useParams' is defined but never used.","'useNavigation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetData'. Either include it or remove the dependency array.","ArrayExpression",["479"],"'useLocation' is defined but never used.","'AddrModal' is defined but never used.",["477"],["478"],"'Link' is defined but never used.","'navigate' is assigned a value but never used.","'onCompletePost' is assigned a value but never used.","'axios' is defined but never used.","Imported JSX component Reports_data must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Reviews_data must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Boards_data must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Comments_data must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Comments_privacy must be in PascalCase or SCREAMING_SNAKE_CASE","'DaumPostcode' is defined but never used.","'user_id' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'admin_id' is assigned a value but never used.","'setAdminId' is assigned a value but never used.","'postings' is assigned a value but never used.","'setPostings' is assigned a value but never used.","'no' is assigned a value but never used.",["480"],["481"],"'dataBool' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'GetData' and 'location.state.id'. Either include them or remove the dependency array.",["482"],["483"],"'inputAddr' is assigned a value but never used.","'setinputAddr' is assigned a value but never used.","'inputType' is assigned a value but never used.","'setinputType' is assigned a value but never used.","'inputFilter' is assigned a value but never used.","'setinputFilter' is assigned a value but never used.","Imported JSX component Contents_none must be in PascalCase or SCREAMING_SNAKE_CASE","'Comment_data' is defined but never used.","Imported JSX component User_data_admin must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_data_admin must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Report_accept_admin must be in PascalCase or SCREAMING_SNAKE_CASE","'Contents_none' is defined but never used.","'Reports_data' is assigned a value but never used.","'ReportsLength' is assigned a value but never used.","'user_reviews' is assigned a value but never used.","'user_reports' is assigned a value but never used.","'user_communities' is assigned a value but never used.","'user_comments' is assigned a value but never used.","'userLength' is assigned a value but never used.","'setuserLength' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'LoadData' and 'location.state.user_id'. Either include them or remove the dependency array.",["484"],"Imported JSX component Reviews_data_admin must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Reports_data_admin must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Communities_data_admin must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Comments_data_admin must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'LoadData' and 'props.user_id'. Either include them or remove the dependency array. If 'setUserId' needs the current value of 'props.user_id', you can also switch to useReducer instead of useState and read 'props.user_id' in the reducer.",["485"],"React Hook useEffect has a missing dependency: 'LoadData'. Either include it or remove the dependency array.",["486"],["487"],["488"],"no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"491","fix":"493"},{"desc":"494","fix":"495"},{"desc":"494","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"501","fix":"503"},{"desc":"501","fix":"504"},"Update the dependencies array to be: [GetData]",{"range":"505","text":"506"},"Update the dependencies array to be: [GetData, page]",{"range":"507","text":"508"},{"range":"509","text":"508"},"Update the dependencies array to be: [GetData, location.state.id]",{"range":"510","text":"511"},{"range":"512","text":"511"},"Update the dependencies array to be: [LoadData, location.state.user_id]",{"range":"513","text":"514"},"Update the dependencies array to be: [LoadData, props.user_id]",{"range":"515","text":"516"},"Update the dependencies array to be: [LoadData]",{"range":"517","text":"518"},{"range":"519","text":"518"},{"range":"520","text":"518"},[640,642],"[GetData]",[800,806],"[GetData, page]",[800,806],[1032,1034],"[GetData, location.state.id]",[1045,1047],[1343,1345],"[LoadData, location.state.user_id]",[418,420],"[LoadData, props.user_id]",[379,381],"[LoadData]",[379,381],[379,381]]