[{"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js":"1","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js":"2","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js":"3","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js":"4","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js":"5","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js":"6","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js":"7","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js":"8","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js":"9","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrModal.js":"10","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalsModal.js":"11"},{"size":288,"mtime":1642729693004,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1642729645327,"results":"14","hashOfConfig":"13"},{"size":707,"mtime":1643876307244,"results":"15","hashOfConfig":"13"},{"size":560,"mtime":1644367522381,"results":"16","hashOfConfig":"13"},{"size":1432,"mtime":1644366944230,"results":"17","hashOfConfig":"13"},{"size":286,"mtime":1642735443291,"results":"18","hashOfConfig":"13"},{"size":4161,"mtime":1643358848719,"results":"19","hashOfConfig":"13"},{"size":5736,"mtime":1644368686173,"results":"20","hashOfConfig":"13"},{"size":667,"mtime":1643942010594,"results":"21","hashOfConfig":"13"},{"size":1065,"mtime":1643944157774,"results":"22","hashOfConfig":"13"},{"size":842,"mtime":1644302113855,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13jkog2",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js",["62"],[],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n    render() {\n      return (\n        <header>\n          <Link to=\"/\">\n          <h2 className=\"menuText\"><a className=\"mainPageLink\">나아라</a></h2>\n          </Link>\n          <nav>\n            <ul className=\"menu\">\n              <li id=\"HeaderSignin\">로그인</li>\n              <li>|</li>\n              <li id=\"HeaderSignup\">회원가입</li>\n            </ul>\n          </nav>\n        </header>\n      )\n    }\n}\n\nexport default Header;",["63","64"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js",["65","66","67","68","69","70","71"],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js",["72","73","74","75","76","77","78","79","80","81","82","83"],[],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\nimport AddrModal from './AddrModal';\nimport HospitalsModal from './HospitalsModal';\n\nfunction NewTest() {\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n    const [symptom_level, setSymptom_level] = useState(1);\n    const [symptom, setSymptom] = useState('이+아픔');\n\n    const [address, setAddress] = useState();\n    const [popup, setPopup] = useState(false);\n\n    const [inputAddr, setinputAddr] = useState('');\n    const [inputType, setinputType] = useState('');\n    const [inputFilter, setinputFilter] = useState('');\n    \n    const [listText, setlistText] = useState('');\n\n    //주소 모달 관련\n    const [modalOpen, setModalOpen] = useState(false);\n    const openModal = () => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    \n    //상세정보 모달 관련\n    const [DmodalOpen, setDModalOpen] = useState(false);\n    const openDModal = () => {\n        setDModalOpen(true);\n    };\n    const closeDModal = () => {\n        setDModalOpen(false);\n    };\n\n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter,\n        })\n        .then(response => {\n            console.log(\"데이터 받아왔어요! : \" + response.data);\n            setJsondata(response.data);\n            console.log(\"데이터 길이: \" + response.data.length);\n            setLength(response.data.length)\n\n        })\n    }, [inputAddr, inputType, inputFilter]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n        console.log(e.target[0].value);\n        console.log(e.target[1].value); //이건 뭐지?\n        console.log(e.target[2].value);\n        console.log(e.target[3].value);\n\n\n        const addr = e.target[0].value;\n        const type = e.target[2].value;\n        const filter = e.target[3].value;\n\n        if (addr != '' && type != '증상') {\n            setinputAddr(addr)\n            setinputType(type)\n            setinputFilter(filter);\n            setlistText('검색 결과가 없습니다.')\n        }\n        else if (addr != '' && type == '병원종류') {\n            alert(\"주소를 입력해주세요.\");\n        }\n        else if (addr == '' && type != '병원종류') {\n            alert(\"병원 종류를 선택해주세요.\");\n        }\n        else {\n            alert(\"주소, 병원 종류, 보기 종류를 선택해주세요.\");\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n\n\n\n\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n            <p className=\"SearchMainText\">증상을 입력해주세요</p>\n            <form onSubmit={AfterSubmit} >\n                    <div className=\"SearchSection\">\n                        <input value={address} className=\"inputAddr\"></input>\n                        <button type=\"button\" className=\"AddrBtn\" onClick={openModal}>주소 검색</button>\n                        <AddrModal open={modalOpen} close={closeModal} header=\"주소 검색\" address={address} setAddress={setAddress} autoClose></AddrModal>\n                        <select name=\"inputType\" className=\"symptom_level\">\n                            <option value=\"병원종류\">병원종류</option>\n                            <option value=\"이비인후과\">이비인후과</option>\n                            <option value=\"내과\">내과</option>\n                            <option value=\"외과\">외과</option>\n                            <option value=\"정형외과\">정형외과</option>\n                            <option value=\"안과\">안과</option>\n                            <option value=\"치과\">치과</option>\n                            <option value=\"피부과\">피부과</option>\n                            <option value=\"한의원\">한의원</option>\n                            <option value=\"가정의학과\">가정의학과</option>\n                        </select>\n                        <select name=\"inputFilter\" className=\"symptom\">\n                            <option value=\"all\">전체보기</option>\n                            <option value=\"infant\">소아과 보기</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            \n            {\n            datalength === 0 ? null : <p>검색 결과는 <strong>{datalength}</strong>건입니다.</p>\n            }\n            <div className=\"cardDiv\">\n                {\n                datalength === 0 ? null :\n                jsondata.map((data, index) => (\n                    <div className=\"card1\">\n                        <p key={index} className=\"Hname\">{data.name}</p>\n                        <p key={index} className=\"Haddr\">{data.addr}</p>\n                        <p key={index} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                        <button type=\"button\" className=\"DetailBtn\" onClick={openDModal}>상세정보</button>\n                        <HospitalsModal open={DmodalOpen} close={closeDModal} header=\"상세 정보 확인\" key={data.id} data={data} autoClose></HospitalsModal>\n                    </div>\n                ))\n                }\n                <p className=\"noneResultText\">{listText}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js",["84","85","86"],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrModal.js",["87","88","89"],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalsModal.js",["90","91"],[],"import React, { useEffect, useState } from \"react\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const { open, close, header, data } = props;\n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            {data.name}\n            {data.addr}\n            {\n              open ? <p>close를 눌러주세요</p> : null\n            }\n          </main>\n          <footer>\n            <button className=\"close\" onClick={close}>\n              {' '}\n              close{' '}\n            </button>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;",["92","93"],{"ruleId":"94","severity":1,"message":"95","line":9,"column":36,"nodeType":"96","endLine":9,"endColumn":64},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":8,"column":24,"nodeType":"103","messageId":"104","endLine":8,"endColumn":33},{"ruleId":"105","severity":1,"message":"106","line":33,"column":27,"nodeType":"107","messageId":"108","endLine":33,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":33,"column":43,"nodeType":"107","messageId":"108","endLine":33,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":37,"column":32,"nodeType":"107","messageId":"108","endLine":37,"endColumn":34},{"ruleId":"105","severity":1,"message":"109","line":37,"column":48,"nodeType":"107","messageId":"108","endLine":37,"endColumn":50},{"ruleId":"105","severity":1,"message":"109","line":41,"column":32,"nodeType":"107","messageId":"108","endLine":41,"endColumn":34},{"ruleId":"105","severity":1,"message":"106","line":41,"column":48,"nodeType":"107","messageId":"108","endLine":41,"endColumn":50},{"ruleId":"101","severity":1,"message":"110","line":11,"column":12,"nodeType":"103","messageId":"104","endLine":11,"endColumn":25},{"ruleId":"101","severity":1,"message":"111","line":11,"column":27,"nodeType":"103","messageId":"104","endLine":11,"endColumn":43},{"ruleId":"101","severity":1,"message":"112","line":12,"column":12,"nodeType":"103","messageId":"104","endLine":12,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":12,"column":21,"nodeType":"103","messageId":"104","endLine":12,"endColumn":31},{"ruleId":"101","severity":1,"message":"114","line":15,"column":12,"nodeType":"103","messageId":"104","endLine":15,"endColumn":17},{"ruleId":"101","severity":1,"message":"115","line":15,"column":19,"nodeType":"103","messageId":"104","endLine":15,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":67,"column":18,"nodeType":"107","messageId":"108","endLine":67,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":67,"column":32,"nodeType":"107","messageId":"108","endLine":67,"endColumn":34},{"ruleId":"105","severity":1,"message":"106","line":73,"column":23,"nodeType":"107","messageId":"108","endLine":73,"endColumn":25},{"ruleId":"105","severity":1,"message":"109","line":73,"column":37,"nodeType":"107","messageId":"108","endLine":73,"endColumn":39},{"ruleId":"105","severity":1,"message":"109","line":76,"column":23,"nodeType":"107","messageId":"108","endLine":76,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":76,"column":37,"nodeType":"107","messageId":"108","endLine":76,"endColumn":39},{"ruleId":"101","severity":1,"message":"116","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"117","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"118","line":5,"column":9,"nodeType":"103","messageId":"104","endLine":5,"endColumn":16},{"ruleId":"101","severity":1,"message":"116","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"117","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"118","line":6,"column":9,"nodeType":"103","messageId":"104","endLine":6,"endColumn":16},{"ruleId":"101","severity":1,"message":"116","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"117","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"97","replacedBy":"119"},{"ruleId":"99","replacedBy":"120"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'setLength' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'symptom_level' is assigned a value but never used.","'setSymptom_level' is assigned a value but never used.","'symptom' is assigned a value but never used.","'setSymptom' is assigned a value but never used.","'popup' is assigned a value but never used.","'setPopup' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'address' is assigned a value but never used.",["121"],["122"],"no-global-assign","no-unsafe-negation"]