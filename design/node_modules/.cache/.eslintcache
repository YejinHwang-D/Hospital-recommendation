[{"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js":"1","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js":"2","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js":"3","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js":"4","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js":"5","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js":"6","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js":"7","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js":"8","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js":"9","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrModal.js":"10","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalsModal.js":"11","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalDetail.js":"12"},{"size":288,"mtime":1642729693004,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1642729645327,"results":"15","hashOfConfig":"14"},{"size":892,"mtime":1644899915311,"results":"16","hashOfConfig":"14"},{"size":560,"mtime":1644367522381,"results":"17","hashOfConfig":"14"},{"size":1432,"mtime":1644366944230,"results":"18","hashOfConfig":"14"},{"size":286,"mtime":1642735443291,"results":"19","hashOfConfig":"14"},{"size":4161,"mtime":1643358848719,"results":"20","hashOfConfig":"14"},{"size":5815,"mtime":1644378153188,"results":"21","hashOfConfig":"14"},{"size":667,"mtime":1643942010594,"results":"22","hashOfConfig":"14"},{"size":1065,"mtime":1643944157774,"results":"23","hashOfConfig":"14"},{"size":1617,"mtime":1644902198501,"results":"24","hashOfConfig":"14"},{"size":497,"mtime":1644900093852,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13jkog2",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/index.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/reportWebVitals.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/App.js",[],[],["67","68"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/components/MenuBar.js",["69"],[],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n    render() {\n      return (\n        <header>\n          <Link to=\"/\">\n          <h2 className=\"menuText\"><a className=\"mainPageLink\">나아라</a></h2>\n          </Link>\n          <nav>\n            <ul className=\"menu\">\n              <li id=\"HeaderSignin\">로그인</li>\n              <li>|</li>\n              <li id=\"HeaderSignup\">회원가입</li>\n            </ul>\n          </nav>\n        </header>\n      )\n    }\n}\n\nexport default Header;",["70","71"],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/MainPage.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Notfound.js",[],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Test2.js",["72","73","74","75","76","77","78"],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/NewTest.js",["79","80","81","82","83","84"],[],"import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\nimport AddrModal from './AddrModal';\nimport HospitalsModal from './HospitalsModal';\n\nfunction NewTest() {\n    //요청 데이터 관련\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n\n    //요청 폼 관련\n    const [inputAddr, setinputAddr] = useState('');\n    const [inputType, setinputType] = useState('');\n    const [inputFilter, setinputFilter] = useState('');\n    \n    //조건부 텍스트 렌더링\n    const [listText, setlistText] = useState('');\n\n    //주소 모달 관련\n    const [address, setAddress] = useState();\n    const [modalOpen, setModalOpen] = useState(false);\n    const openModal = () => {\n        setModalOpen(true);\n    };\n    const closeModal = () => {\n        setModalOpen(false);\n    };\n    \n    //상세정보 모달 관련\n    const [DmodalOpen, setDModalOpen] = useState(false);\n    const [modalData, setmodalData] = useState();\n    const openDModal = (value, e) => {\n        //모달 열기\n        setDModalOpen(true);\n        //value는 JSON 데이터이므로 value.name 식으로 접근\n        setmodalData(value);\n    };\n    const closeDModal = () => {\n        setDModalOpen(false);\n    };\n\n    \n\n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter,\n        })\n        .then(response => {\n            console.log(\"데이터 받아왔어요! : \" + response.data);\n            setJsondata(response.data);\n            console.log(\"데이터 길이: \" + response.data.length);\n            setLength(response.data.length)\n        })\n    }, [inputAddr, inputType, inputFilter]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n        console.log(e.target[0].value);\n        console.log(e.target[1].value); //이건 뭐지?\n        console.log(e.target[2].value);\n        console.log(e.target[3].value);\n\n\n        const addr = e.target[0].value;\n        const type = e.target[2].value;\n        const filter = e.target[3].value;\n\n        if (addr != '' && type != '증상') {\n            setinputAddr(addr)\n            setinputType(type)\n            setinputFilter(filter);\n            setlistText('검색 결과가 없습니다.')\n        }\n        else if (addr != '' && type == '병원종류') {\n            alert(\"주소를 입력해주세요.\");\n        }\n        else if (addr == '' && type != '병원종류') {\n            alert(\"병원 종류를 선택해주세요.\");\n        }\n        else {\n            alert(\"주소, 병원 종류, 보기 종류를 선택해주세요.\");\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n\n\n\n\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n            <p className=\"SearchMainText\">증상을 입력해주세요</p>\n            <form onSubmit={AfterSubmit} >\n                    <div className=\"SearchSection\">\n                        <input value={address} className=\"inputAddr\"></input>\n                        <button type=\"button\" className=\"AddrBtn\" onClick={openModal}>주소 검색</button>\n                        <AddrModal open={modalOpen} close={closeModal} header=\"주소 검색\" address={address} setAddress={setAddress} autoClose></AddrModal>\n                        <select name=\"inputType\" className=\"symptom_level\">\n                            <option value=\"병원종류\">병원종류</option>\n                            <option value=\"이비인후과\">이비인후과</option>\n                            <option value=\"내과\">내과</option>\n                            <option value=\"외과\">외과</option>\n                            <option value=\"정형외과\">정형외과</option>\n                            <option value=\"안과\">안과</option>\n                            <option value=\"치과\">치과</option>\n                            <option value=\"피부과\">피부과</option>\n                            <option value=\"한의원\">한의원</option>\n                            <option value=\"가정의학과\">가정의학과</option>\n                        </select>\n                        <select name=\"inputFilter\" className=\"symptom\">\n                            <option value=\"all\">전체보기</option>\n                            <option value=\"infant\">소아과 보기</option>\n                        </select>\n                        <button type=\"submit\" className=\"formBtn\">검색</button>\n                    </div>\n            </form>\n            \n            {\n            datalength === 0 ? null : <p>검색 결과는 <strong>{datalength}</strong>건입니다.</p>\n            }\n            <div className=\"cardDiv\">\n                {\n                datalength === 0 ? null :\n                jsondata.map((data, index) => (\n                    <div className=\"card1\">\n                        <p key={index} className=\"Hname\">{data.name}</p>\n                        <p key={index} className=\"Haddr\">{data.addr}</p>\n                        <p key={index} className=\"Htelno\">{data.telno}</p>\n                        <button type=\"button\" className=\"CallBtn\" onClick={e => Call(data.telno, e)}>전화 걸기</button>\n                        <button type=\"button\" className=\"DetailBtn\" onClick={e => openDModal(data, e)}>상세정보</button>\n                    </div>\n                ))\n                }\n                <HospitalsModal open={DmodalOpen} close={closeDModal} data={modalData} autoClose></HospitalsModal>\n                <p className=\"noneResultText\">{listText}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default NewTest;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrPopup.js",["85","86","87"],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/AddrModal.js",["88","89","90"],[],"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalsModal.js",["91","92","93"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom'\nimport './modal.css';\n\nconst Post = (props) => {\n  const { open, close, data } = props;\n  \n\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {data.name}\n            <button className=\"close\" onClick={close}>\n              {' '}\n              &times;{' '}\n            </button>\n          </header>\n          <main>\n            <span>{data.type_code}</span>\n            <p>{data.addr}</p>\n            <p>{data.coord}</p>\n            <p>{data.postNo}</p>\n            <p>{data.telno}</p>\n            <p>{data.hospUrl}</p>\n            <p>{data.estbed}</p>\n            <p>{data.drTotCnt}</p>\n\n            <span>치과일반의: {data.detyGdrCnt} </span>\n            <span>치과인턴: {data.detyIntnCnt} </span>\n            <span>치과레지던트: {data.detyResdntCnt} </span>\n            <span>치과전문의: {data.detySdrCnt} </span>\n            <p></p>\n            <span>의과일반의: {data.mdeptGdrCnt} </span>\n            <span>의과인턴: {data.mdeptIntnCnt} </span>\n            <span>의과레지던트: {data.mdeptResdntCnt} </span>\n            <span>의과전문의: {data.mdeptSdrCnt} </span>\n          </main>\n          <footer>\n            <button className=\"close\" onClick={close}>\n              {' '}\n              close{' '}\n            </button>\n            <button className=\"DetailBtn\">상세페이지\n            </button>\n          </footer>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;","/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/HospitalDetail.js",[],[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":9,"column":36,"nodeType":"100","endLine":9,"endColumn":64},{"ruleId":"94","replacedBy":"101"},{"ruleId":"96","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":24,"nodeType":"105","messageId":"106","endLine":8,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":33,"column":27,"nodeType":"109","messageId":"110","endLine":33,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":33,"column":43,"nodeType":"109","messageId":"110","endLine":33,"endColumn":45},{"ruleId":"107","severity":1,"message":"108","line":37,"column":32,"nodeType":"109","messageId":"110","endLine":37,"endColumn":34},{"ruleId":"107","severity":1,"message":"111","line":37,"column":48,"nodeType":"109","messageId":"110","endLine":37,"endColumn":50},{"ruleId":"107","severity":1,"message":"111","line":41,"column":32,"nodeType":"109","messageId":"110","endLine":41,"endColumn":34},{"ruleId":"107","severity":1,"message":"108","line":41,"column":48,"nodeType":"109","messageId":"110","endLine":41,"endColumn":50},{"ruleId":"107","severity":1,"message":"108","line":71,"column":18,"nodeType":"109","messageId":"110","endLine":71,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":71,"column":32,"nodeType":"109","messageId":"110","endLine":71,"endColumn":34},{"ruleId":"107","severity":1,"message":"108","line":77,"column":23,"nodeType":"109","messageId":"110","endLine":77,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":77,"column":37,"nodeType":"109","messageId":"110","endLine":77,"endColumn":39},{"ruleId":"107","severity":1,"message":"111","line":80,"column":23,"nodeType":"109","messageId":"110","endLine":80,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":80,"column":37,"nodeType":"109","messageId":"110","endLine":80,"endColumn":39},{"ruleId":"103","severity":1,"message":"112","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"113","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"114","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"113","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"114","line":6,"column":9,"nodeType":"105","messageId":"106","endLine":6,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"113","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"115","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["116"],["117"],"no-unused-vars","'setLength' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useState' is defined but never used.","'address' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]